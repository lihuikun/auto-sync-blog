import{_ as a,c as o,a as t,o as r}from"./chunks/framework.DBW9o7tl.js";const i=JSON.parse('{"title":"vue原理","description":"","frontmatter":{},"headers":[],"relativePath":"columns/7132465601553006629.md","filePath":"columns/7132465601553006629.md"}'),p={name:"columns/7132465601553006629.md"};function n(u,e,l,c,s,h){return r(),o("div",null,e[0]||(e[0]=[t('<h1 id="vue原理" tabindex="-1">vue原理 <a class="header-anchor" href="#vue原理" aria-label="Permalink to &quot;vue原理&quot;">​</a></h1><h2 id="内容介绍" tabindex="-1">内容介绍 <a class="header-anchor" href="#内容介绍" aria-label="Permalink to &quot;内容介绍&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>系统学习vue的原理</p></div><h2 id="数据统计" tabindex="-1">数据统计 <a class="header-anchor" href="#数据统计" aria-label="Permalink to &quot;数据统计&quot;">​</a></h2><p><strong>17 文章 · 0 订阅</strong></p><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="v-for调用子组件暴露给父组件的方法" tabindex="-1">v-for调用子组件暴露给父组件的方法 <a class="header-anchor" href="#v-for调用子组件暴露给父组件的方法" aria-label="Permalink to &quot;v-for调用子组件暴露给父组件的方法&quot;">​</a></h3><blockquote><p>子组件通过暴露方法给到父组件调用 父组件通过ref调用子组件的方法，这里需要进行唯一的ref注册，如果不唯一就无法获取到对应的ref去调用，因为v-for生成的ref是一个数组 调用方法...</p><p><a href="https://juejin.cn/post/7379221811240108059" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>13 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-06-12 🏷 <code>前端</code></p><h3 id="element-plus轮播图动态数据-第一页显示空" tabindex="-1">element plus轮播图动态数据，第一页显示空 <a class="header-anchor" href="#element-plus轮播图动态数据-第一页显示空" aria-label="Permalink to &quot;element plus轮播图动态数据，第一页显示空&quot;">​</a></h3><blockquote><p>今天开发，发现轮播图的数据是动态的就会会出现第一页空白，一开始以为是执行顺序的问题，<strong>在onbeforeMonut执行接口获取数据，然后在onMount在执行动态数据</strong>，最后加了await还是会 ...</p><p><a href="https://juejin.cn/post/7175142345359720503" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>310 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-12-09 🏷 <code>Element</code></p><h3 id="虚拟dom和diff算法" tabindex="-1">虚拟dom和diff算法 <a class="header-anchor" href="#虚拟dom和diff算法" aria-label="Permalink to &quot;虚拟dom和diff算法&quot;">​</a></h3><blockquote><p>vue所谓的diff算法就是精细化比对，进行最小化更新。 vue的虚拟dom就是将真实dom转换一个js对象，...</p><p><a href="https://juejin.cn/post/7165521013151629326" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>24 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-11-13 🏷 <code>Vue.js</code></p><h3 id="vue3实战之数组的响应式" tabindex="-1">vue3实战之数组的响应式 <a class="header-anchor" href="#vue3实战之数组的响应式" aria-label="Permalink to &quot;vue3实战之数组的响应式&quot;">​</a></h3><blockquote><p>vue2的数组响应式需要使用this.$set， 实现数组元素的变化更新，vue2只是改写了数组的七个方法（&#39;push&#39;, &#39;pop&#39;, &#39;shift&#39;, &#39;unshift&#39;, &#39;splice&#39;, &#39;...</p><p><a href="https://juejin.cn/post/7164239042077753375" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1379 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-11-10 🏷 <code>Vue.js</code></p><h3 id="web前端的渲染发展历程-vue模板引擎" tabindex="-1">web前端的渲染发展历程-vue模板引擎 <a class="header-anchor" href="#web前端的渲染发展历程-vue模板引擎" aria-label="Permalink to &quot;web前端的渲染发展历程-vue模板引擎&quot;">​</a></h3><blockquote><p>模板引擎是将数据变成视图的最优雅的方式 没使用vue的v-for，了解前端的渲染发展历程 1.使用原生要先获取dom节点然后appendChild 2.es6的模板字符串 3.mustache是一个j...</p><p><a href="https://juejin.cn/post/7161809966985281544" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>70 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-11-03 🏷 <code>Vue.js</code></p><h3 id="组件封装之v-model" tabindex="-1">组件封装之v-model <a class="header-anchor" href="#组件封装之v-model" aria-label="Permalink to &quot;组件封装之v-model&quot;">​</a></h3><blockquote><p>组件封装使用到的v-model实际上就是:value=&#39;value&#39; @input=&#39;value=$event.target.value&#39;, 子组件里面接收value，并将@input=&#39;handle...</p><p><a href="https://juejin.cn/post/7158474752300941325" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>42 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-10-25 🏷 <code>Vue.js</code></p><h3 id="vue组件封装的动画" tabindex="-1">vue组件封装的动画 <a class="header-anchor" href="#vue组件封装的动画" aria-label="Permalink to &quot;vue组件封装的动画&quot;">​</a></h3><blockquote><p>先来看看官方文档是怎么做的动画的过度，即消失与出现的动画 其实就是动态切换这六个类，使用时的用法，如果不写name就会使用vue默认的动画，一般使用时都是会使用默认的动画，有特殊的动画需求再去自己写c...</p><p><a href="https://juejin.cn/post/7158105016211865631" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>53 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-10-24 🏷 <code>JavaScript</code> <code>Vue.js</code></p><h3 id="组件封装之sync修饰符" tabindex="-1">组件封装之sync修饰符 <a class="header-anchor" href="#组件封装之sync修饰符" aria-label="Permalink to &quot;组件封装之sync修饰符&quot;">​</a></h3><blockquote><p>在日常的组件封装中，难免父组件要给子组件传值，由于vue的父子组件是单向数据流，所以不能直接修改父组件传进来的值，要通过this.$emit通知父组件修改值 看一下官方文档是怎么说的 意思就是父子组件...</p><p><a href="https://juejin.cn/post/7158101263459024926" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>32 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-10-24 🏷 <code>Vue.js</code></p><h3 id="vue的模板字符串使用v-html渲染的坑" tabindex="-1">vue的模板字符串使用v-html渲染的坑 <a class="header-anchor" href="#vue的模板字符串使用v-html渲染的坑" aria-label="Permalink to &quot;vue的模板字符串使用v-html渲染的坑&quot;">​</a></h3><blockquote><p>有一个需求是弹框然后有字体是绿色，点击绿色会路由跳转, 发现报错，打印子组件的this也是undefined，父组件明明定义了，在onclick打印this发现是span标签他自己，然后无数次尝试后发...</p><p><a href="https://juejin.cn/post/7155875530091266055" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>218 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-10-18 🏷 <code>JavaScript</code></p><h3 id="动态渲染图片实现鼠标悬停图片更换" tabindex="-1">动态渲染图片实现鼠标悬停图片更换 <a class="header-anchor" href="#动态渲染图片实现鼠标悬停图片更换" aria-label="Permalink to &quot;动态渲染图片实现鼠标悬停图片更换&quot;">​</a></h3><blockquote><p>有一个需求，鼠标放上就显示另外一张图片，移开恢复原图（每一张图片都是不一样的），动态渲染其图片 鼠标放上之前 鼠标放上后，左边的图片变成另外一张图片 实现的代码...</p><p><a href="https://juejin.cn/post/7140171264903086110" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>58 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-09-06 🏷 <code>Vue.js</code></p><h3 id="vuex的使用-vue3" tabindex="-1">vueX的使用（vue3） <a class="header-anchor" href="#vuex的使用-vue3" aria-label="Permalink to &quot;vueX的使用（vue3）&quot;">​</a></h3><blockquote><p>vuex的详细使用，getters是计算属性，提交修改mutations的数据，异步请求的操作写在action store/index.js app.vue...</p><p><a href="https://juejin.cn/post/7138021133810892836" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>69 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-31 🏷 <code>JavaScript</code> <code>Vue.js</code></p><h3 id="详细理解vue的爷孙组件的传值" tabindex="-1">详细理解vue的爷孙组件的传值 <a class="header-anchor" href="#详细理解vue的爷孙组件的传值" aria-label="Permalink to &quot;详细理解vue的爷孙组件的传值&quot;">​</a></h3><blockquote><p>爷组件定义多个值给父组件，如果父组件没有用props接收，就会存在$attrs这个容器里面，子组件想要拿到这个容器里面的值就需要父组件把这个容器传给子组件（v-bind=&quot;$attrs&quot;）,相反子组件...</p><p><a href="https://juejin.cn/post/7137934802786713636" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>159 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-31 🏷 <code>Vue.js</code></p><h3 id="vue3和vue2的区别" tabindex="-1">vue3和vue2的区别 <a class="header-anchor" href="#vue3和vue2的区别" aria-label="Permalink to &quot;vue3和vue2的区别&quot;">​</a></h3><blockquote><p>1.Vue2 与vue3 最大的区别是vue2使用选项类型api，对比vue3组合型api。vue2选项型api在代码里分割了不同得属性：data,computed,methods等；vue3合成型a...</p><p><a href="https://juejin.cn/post/7135824519030046728" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>103 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-25 🏷 <code>JavaScript</code> <code>Vue.js</code> <code>前端</code></p><h3 id="vue的dep和watcher类" tabindex="-1">vue的dep和watcher类 <a class="header-anchor" href="#vue的dep和watcher类" aria-label="Permalink to &quot;vue的dep和watcher类&quot;">​</a></h3><blockquote><p>创建一个dep和watcher类，给每一个对象的__ob__属性添加上Dep，给数组和对象也添加上Dep，简单数据类型不添加Dep（如b:10)就没有。 get收集依赖（vue2依赖是组件，由组件去更...</p><p><a href="https://juejin.cn/post/7134709304912773128" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>66 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-22 🏷 <code>JavaScript</code> <code>Vue.js</code></p><h3 id="数组的响应式原理" tabindex="-1">数组的响应式原理 <a class="header-anchor" href="#数组的响应式原理" aria-label="Permalink to &quot;数组的响应式原理&quot;">​</a></h3><blockquote><p>1.vue改写数组的七个方法：push、pop、shift、unshif、splice、sort、reverse vue的数组响应式原理是以Array.prototype为原型,创建一个arrayMe...</p><p><a href="https://juejin.cn/post/7134348520219213860" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>118 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-21 🏷 <code>前端</code> <code>Vue.js</code> <code>JavaScript</code></p><h3 id="递归侦测对象" tabindex="-1">递归侦测对象 <a class="header-anchor" href="#递归侦测对象" aria-label="Permalink to &quot;递归侦测对象&quot;">​</a></h3><blockquote><p>首先创建一个observe函数判断是不是对象，再判断是不是有__ob__这个属性 创建一个Observer类，给对象添加__ob__这个属性 添加一个工具函数，进行递归...</p><p><a href="https://juejin.cn/post/7132863770866483207" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>77 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-08-17 🏷 <code>Vue.js</code></p><h3 id="vue的数据更新原理" tabindex="-1">vue的数据更新原理 <a class="header-anchor" href="#vue的数据更新原理" aria-label="Permalink to &quot;vue的数据更新原理&quot;">​</a></h3><blockquote><p>vue的数据更新原理，之前并没有系统的学习vue的原理，大概看过一些面试题知道Object.defineProperty这个属性，直接给obj赋值不是更加简单？通过mdn的相关资料知道，该方法还有多个...</p><p><a href="https://juejin.cn/post/7132465425832476685" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>81 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2022-08-16 🏷 <code>JavaScript</code> <code>前端</code> <code>Vue.js</code></p>',74)]))}const b=a(p,[["render",n]]);export{i as __pageData,b as default};
