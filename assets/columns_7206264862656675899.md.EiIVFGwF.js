import{_ as a,c as o,a as t,o as r}from"./chunks/framework.DBW9o7tl.js";const d=JSON.parse('{"title":"2023面试理解","description":"","frontmatter":{},"headers":[],"relativePath":"columns/7206264862656675899.md","filePath":"columns/7206264862656675899.md"}'),n={name:"columns/7206264862656675899.md"};function p(c,e,s,l,u,h){return r(),o("div",null,e[0]||(e[0]=[t(`<h1 id="_2023面试理解" tabindex="-1">2023面试理解 <a class="header-anchor" href="#_2023面试理解" aria-label="Permalink to &quot;2023面试理解&quot;">​</a></h1><h2 id="内容介绍" tabindex="-1">内容介绍 <a class="header-anchor" href="#内容介绍" aria-label="Permalink to &quot;内容介绍&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>2023面试理</p></div><h2 id="数据统计" tabindex="-1">数据统计 <a class="header-anchor" href="#数据统计" aria-label="Permalink to &quot;数据统计&quot;">​</a></h2><p><strong>33 文章 · 0 订阅</strong></p><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="手写vuex" tabindex="-1">手写vueX <a class="header-anchor" href="#手写vuex" aria-label="Permalink to &quot;手写vueX&quot;">​</a></h3><blockquote><p>1.main.js导入使用store vuex的使用方法，actions是异步 vuex/index.js 组件使用...</p><p><a href="https://juejin.cn/post/7238539643948367933" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>50 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-29 🏷 <code>前端</code></p><h3 id="webpack原理" tabindex="-1">webpack原理 <a class="header-anchor" href="#webpack原理" aria-label="Permalink to &quot;webpack原理&quot;">​</a></h3><blockquote><p>loader执行顺序从右到左，从下到上 1.同步loader 同步loader不能执行异步loader 2.异步loader 先执行异步的test2再执行test1 一、webpack-dev-ser...</p><p><a href="https://juejin.cn/post/7238148905095970876" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-28 🏷 <code>Webpack</code></p><h3 id="vue原理-渡一" tabindex="-1">vue原理（渡一） <a class="header-anchor" href="#vue原理-渡一" aria-label="Permalink to &quot;vue原理（渡一）&quot;">​</a></h3><blockquote><p>数据响应式的本质就是数据变化时自动运行一些函数，遍历一个对象进行Object.defineProperty进行get和set依赖收集， 依赖收集是保存一个数组，在set的是遍历数组进行函数执行，new...</p><p><a href="https://juejin.cn/post/7237043816887369786" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>178 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-25 🏷 <code>前端</code></p><h3 id="浏览器渲染原理" tabindex="-1">浏览器渲染原理 <a class="header-anchor" href="#浏览器渲染原理" aria-label="Permalink to &quot;浏览器渲染原理&quot;">​</a></h3><blockquote><p>一、当浏览器的网络线程拿到html文档，会产生一个渲染任务，并将其传递给渲染主线程的消息队列 在事件循环机制下，渲染主线程取出消息队列中的渲染任务，开启渲染流程 1.解析html，完成dom树和css...</p><p><a href="https://juejin.cn/post/7236672410626588727" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>28 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-24 🏷 <code>面试</code></p><h3 id="_27-map-obj互转" tabindex="-1">27.map，obj互转 <a class="header-anchor" href="#_27-map-obj互转" aria-label="Permalink to &quot;27.map，obj互转&quot;">​</a></h3><blockquote><div class="language-var vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">var</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line highlighted"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7220782242254782523)</span></span></code></pre></div></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-11 🏷 <code>前端</code></p><h3 id="_26-事件循环机制" tabindex="-1">26.事件循环机制 <a class="header-anchor" href="#_26-事件循环机制" aria-label="Permalink to &quot;26.事件循环机制&quot;">​</a></h3><blockquote><p>异步： (微任务)promise、.then.catch.finally、nodejs、nextTick （宏任务）setTimeout、setInterval、AJAX 宏任务 - 微任务 ：事件循...</p><p><a href="https://juejin.cn/post/7144370915718430734" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>69 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2022-09-17 🏷 <code>JavaScript</code> <code>前端</code></p><h3 id="_25-闭包" tabindex="-1">25.闭包 <a class="header-anchor" href="#_25-闭包" aria-label="Permalink to &quot;25.闭包&quot;">​</a></h3><blockquote><p>局部变量无法共享和长久保存，全局变量可能会造成全局污染，希望有一种机制可以长久保存变量，又不会造成全...</p><p><a href="https://juejin.cn/post/7218915344131719223" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-06 🏷 <code>前端</code></p><h3 id="_24-作用域" tabindex="-1">24.作用域 <a class="header-anchor" href="#_24-作用域" aria-label="Permalink to &quot;24.作用域&quot;">​</a></h3><blockquote><div class="language-// vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">//</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7218459472918036538)</span></span></code></pre></div></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-05 🏷 <code>前端</code></p><h3 id="_23-this指向" tabindex="-1">23.this指向 <a class="header-anchor" href="#_23-this指向" aria-label="Permalink to &quot;23.this指向&quot;">​</a></h3><blockquote><p>this的指向问题，没有调用者，默认指向全局window，严格模式下是undefined 谁调用就指向...</p><p><a href="https://juejin.cn/post/7218148909751238712" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-04 🏷 <code>前端</code></p><h3 id="_22-谈谈vuex的理解" tabindex="-1">22.谈谈vueX的理解 <a class="header-anchor" href="#_22-谈谈vuex的理解" aria-label="Permalink to &quot;22.谈谈vueX的理解&quot;">​</a></h3><blockquote><p>概念 Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式， 采用集中式存储管理应用的所有组件的状态，解决多组件数据通信。 状态修改 组件中commit-&gt;mutation-&gt;修改状态 组件...</p><p><a href="https://juejin.cn/post/7217801491189219389" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>57 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-03 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_21-vue钩子函数" tabindex="-1">21.vue钩子函数 <a class="header-anchor" href="#_21-vue钩子函数" aria-label="Permalink to &quot;21.vue钩子函数&quot;">​</a></h3><blockquote><p>一、全局钩子（2个） 每次跳转路由时都会执行这个钩子函数，由router调用 1、beforeEach(to,from,next) 页面加载之前执行，有三个参数 to：到哪个路由去，from：从哪个路...</p><p><a href="https://juejin.cn/post/7216968724938391609" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>39 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-01 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_20-vue的性能优化" tabindex="-1">20.vue的性能优化 <a class="header-anchor" href="#_20-vue的性能优化" aria-label="Permalink to &quot;20.vue的性能优化&quot;">​</a></h3><blockquote><p>数据层级不宜过深，合理设置响应式数据 通过Object.freeze()方法冻结不需要响应式的数据 使用数据时缓存值的结果，不频繁取值 v-for合理设置key，尽量不使用index v-show和v...</p><p><a href="https://juejin.cn/post/7216679822097760315" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>50 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-31 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_19-自定义指令的应用场景" tabindex="-1">19.自定义指令的应用场景 <a class="header-anchor" href="#_19-自定义指令的应用场景" aria-label="Permalink to &quot;19.自定义指令的应用场景&quot;">​</a></h3><blockquote><p>概念 Vue除了提供了默认内置的指令外，还允许开发人员根据实际情况自定义指令，它的作用价值在于，在某些场景下需要对普通DOM元素进行操作的逻辑进行复用。 生命周期 一个指令定义对象可以提供如下几个钩子...</p><p><a href="https://juejin.cn/post/7216316745525723191" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>41 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-30 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_19-谈谈你对nexttick的理解" tabindex="-1">19.谈谈你对nextTick的理解 <a class="header-anchor" href="#_19-谈谈你对nexttick的理解" aria-label="Permalink to &quot;19.谈谈你对nextTick的理解&quot;">​</a></h3><blockquote><p>概念 在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。 vue的数据是同步的，视图更新是异步的，如果数据有变化一百次视图跟着更新一百次，性能消耗比较...</p><p><a href="https://juejin.cn/post/7215967109171445816" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>43 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-29 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_18-vue的异步组件" tabindex="-1">18.vue的异步组件 <a class="header-anchor" href="#_18-vue的异步组件" aria-label="Permalink to &quot;18.vue的异步组件&quot;">​</a></h3><blockquote><p>异步组件的特点： Vue 只有在这个组件需要被渲染的时候才会从服务器端请求组件的相关js，且会把结果缓存起来供未来重渲染。 异步组件的好处： 提高性能。在大型应用中，我们可以将应用分割成小一些的代码块...</p><p><a href="https://juejin.cn/post/7215523663218147386" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-28 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_17-v-model和-sync" tabindex="-1">17.v-model和.sync <a class="header-anchor" href="#_17-v-model和-sync" aria-label="Permalink to &quot;17.v-model和.sync&quot;">​</a></h3><blockquote><p>v-model本质上是一个语法糖,在大部分情况下，** v-model=&quot;foo&quot; 等价于 :value=&quot;foo&quot; 加上 @input=&quot;foo = $event&quot;；** 原生的input的@inp...</p><p><a href="https://juejin.cn/post/7215188852851376184" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-27 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_16-vue-mixin" tabindex="-1">16.vue.mixin <a class="header-anchor" href="#_16-vue-mixin" aria-label="Permalink to &quot;16.vue.mixin&quot;">​</a></h3><blockquote><p>概念 mixin可以用来扩展组件，将公共逻辑进行抽离，在需要该逻辑的组件进行混入，采用策略模式****针对不同的属性进行合并，如果混入的数据和本身组件的数据冲突，采用“就近原则”，以组件的数据为准 混...</p><p><a href="https://juejin.cn/post/7214726637786333240" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>41 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-26 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_15-v-once" tabindex="-1">15.v-once <a class="header-anchor" href="#_15-v-once" aria-label="Permalink to &quot;15.v-once&quot;">​</a></h3><blockquote><p>概念 v-once是vue中的内置指令，只渲染元素和组件一次，随后的重新渲染，元素/组件及其所有的子节点都视为静态内容（其实就是缓存数据）跳过更新，这可以用于优化性能 使用场景 单个元素 有子元素 组...</p><p><a href="https://juejin.cn/post/7214435063180984375" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>64 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-25 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_14-函数式组件和过滤器" tabindex="-1">14.函数式组件和过滤器 <a class="header-anchor" href="#_14-函数式组件和过滤器" aria-label="Permalink to &quot;14.函数式组件和过滤器&quot;">​</a></h3><blockquote><p>函数式组件优势 无状态、无生命周期、无this，但是性能高，正常的组件是继承vue的一个类，函数式组件就是一个普通函数，没有new的过程，在vue3所有的组件都没有new，所以性能上没有优势。 过滤器...</p><p><a href="https://juejin.cn/post/7214036479819497509" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>29 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-24 🏷 <code>Vue.js</code></p><h3 id="_13-vue-extends方法的作用" tabindex="-1">13.Vue.extends方法的作用？ <a class="header-anchor" href="#_13-vue-extends方法的作用" aria-label="Permalink to &quot;13.Vue.extends方法的作用？&quot;">​</a></h3><blockquote><p>Vue.extends(options) 使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象 data 选项是特例，需要注意 - 在 Vue.extend() 中它必须是函数 这...</p><p><a href="https://juejin.cn/post/7213665579701485625" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>115 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-23 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_12-vue-use是干什么的-重点" tabindex="-1">12.vue.use是干什么的（重点） <a class="header-anchor" href="#_12-vue-use是干什么的-重点" aria-label="Permalink to &quot;12.vue.use是干什么的（重点）&quot;">​</a></h3><blockquote><p>概念 插件的作用：插件通常用来为Vue添加全局功能，插件的功能没有严格的限制，一般有以下几种： 添加全局方法或property,如：vue-custom-element 添加全局资源：指令、过滤器、过...</p><p><a href="https://juejin.cn/post/7212925983966871609" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>35 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-21 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="vue里面的key的作用" tabindex="-1">vue里面的key的作用 <a class="header-anchor" href="#vue里面的key的作用" aria-label="Permalink to &quot;vue里面的key的作用&quot;">​</a></h3><blockquote><p>概念 key的特殊attribute，主要用在vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes，如果不使用key，vue会使用一种最大限度减少动态元素，并且尽可能尝试的修改、复用相同类型...</p><p><a href="https://juejin.cn/post/7212603829571878967" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-20 🏷 <code>前端</code></p><h3 id="_11-vue的diff算法原理" tabindex="-1">11.vue的diff算法原理 <a class="header-anchor" href="#_11-vue的diff算法原理" aria-label="Permalink to &quot;11.vue的diff算法原理&quot;">​</a></h3><blockquote><p>概念 vue基于虚拟dom做更新，核心是比较两个节点的差异，平级比较不考虑跨级比较，内部使用深度递归和双指针的方式进行比较 流程 1.先比较是否是相同节点key tag 2.相同节点比较属性，并复用老...</p><p><a href="https://juejin.cn/post/7212101192746811448" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-19 🏷 <code>前端</code></p><h3 id="_10-new-vue过程中做了什么" tabindex="-1">10.new Vue过程中做了什么 <a class="header-anchor" href="#_10-new-vue过程中做了什么" aria-label="Permalink to &quot;10.new Vue过程中做了什么&quot;">​</a></h3><blockquote><p>内部会初始化组件绑定事件，初始化组件的父子关系$parent $children $root 初始化响应式数据data、computed、props、watch、method，同时也初始化了provi...</p><p><a href="https://juejin.cn/post/7211437215336054844" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>21 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-17 🏷 <code>前端</code></p><h3 id="_9-watch和watcheffect的区别" tabindex="-1">9.watch和watchEffect的区别 <a class="header-anchor" href="#_9-watch和watcheffect的区别" aria-label="Permalink to &quot;9.watch和watchEffect的区别&quot;">​</a></h3><blockquote><p>watch监测一个或多个数据源，并在数据源发生变化时调用一个回调函数 watchEffect立即执行函数，被动地追踪依赖，当依赖变化时调用函数 两者之间区别不大，watch是数据变了，允许用户可以执行...</p><p><a href="https://juejin.cn/post/7211439925144731706" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-17 🏷 <code>前端</code></p><h3 id="_8-computed和watch的区别" tabindex="-1">8.computed和watch的区别 <a class="header-anchor" href="#_8-computed和watch的区别" aria-label="Permalink to &quot;8.computed和watch的区别&quot;">​</a></h3><blockquote><p>vue2有三种watch（渲染watch，计算属性watch（computed），用户watch（也就是watch）） vue3有三种effect（渲染effect，计算属性effect（comput...</p><p><a href="https://juejin.cn/post/7210333299041534011" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-14 🏷 <code>Vue.js</code></p><h3 id="_7-vue中的v-if和v-show怎么理解" tabindex="-1">7.vue中的v-if和v-show怎么理解 <a class="header-anchor" href="#_7-vue中的v-if和v-show怎么理解" aria-label="Permalink to &quot;7.vue中的v-if和v-show怎么理解&quot;">​</a></h3><blockquote><p>基本概念 v-if，如果条件不成立就不会渲染当前指令所在的节点的dom元素（三元表达式） v-show只是切换当前dom的显示和隐藏display:none display opacity visiv...</p><p><a href="https://juejin.cn/post/7209990164847935544" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>118 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-13 🏷 <code>Vue.js</code></p><h3 id="_6-vue-set是怎么实现的" tabindex="-1">6.vue.set是怎么实现的 <a class="header-anchor" href="#_6-vue-set是怎么实现的" aria-label="Permalink to &quot;6.vue.set是怎么实现的&quot;">​</a></h3><blockquote><p>有五种情况 1.target未定义或者是基础类型就抛出警告 2.判断是否为数组，并判断key是不是有效索引，将数组的.length属性设置为最大值，调用数组的splice方法，将修改的数据变为响应式 ...</p><p><a href="https://juejin.cn/post/7209964630159851575" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>55 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-13 🏷 <code>前端</code></p><h3 id="_5-谈谈对响应式数据的理解" tabindex="-1">5.谈谈对响应式数据的理解？ <a class="header-anchor" href="#_5-谈谈对响应式数据的理解" aria-label="Permalink to &quot;5.谈谈对响应式数据的理解？&quot;">​</a></h3><blockquote><p>vue2数组和对象类型的值变化如何劫持到 对象内部的defineReactive方法，使用Object.defineProperty将属性进行劫持，重写getter和setter 数组则是通过重写数组...</p><p><a href="https://juejin.cn/post/7207783106970026045" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>61 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-07 🏷 <code>Vue.js</code></p><h3 id="_4-vue组件化的理解" tabindex="-1">4.vue组件化的理解 <a class="header-anchor" href="#_4-vue组件化的理解" aria-label="Permalink to &quot;4.vue组件化的理解&quot;">​</a></h3><blockquote><p>组件化是对我们的业务逻辑的封装 早期的组件化是webComponent，浏览器原生，没有发展起来是因为兼容性不好，其核心是模板、属性、事件、插槽、生命周期 好处 高内聚、可重用、可组合 组件化开发能大...</p><p><a href="https://juejin.cn/post/7207374216005107772" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1130 阅读 · 1 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-06 🏷 <code>Vue.js</code></p><h3 id="_3-vue为什么需要虚拟dom" tabindex="-1">3.vue为什么需要虚拟DOM？ <a class="header-anchor" href="#_3-vue为什么需要虚拟dom" aria-label="Permalink to &quot;3.vue为什么需要虚拟DOM？&quot;">​</a></h3><blockquote><p>1.概念 虚拟DOM就是一个js对象来描述真实DOM，如果直接操作DOM的话，性能低但是js层的操作效率高，虚拟DOM是将操作转换为对象操作，最终通过diff算法对差异进行更新，减少对真实DOM的操作...</p><p><a href="https://juejin.cn/post/7206950454097526840" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>546 阅读 · 3 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-05 🏷 <code>Vue.js</code></p><h3 id="_2-谈谈spa的理解" tabindex="-1">2.谈谈spa的理解 <a class="header-anchor" href="#_2-谈谈spa的理解" aria-label="Permalink to &quot;2.谈谈spa的理解&quot;">​</a></h3><blockquote><p>1.概念 1.SPA（单页面应用），默认情况下vue、react都是一个html，并且提供一个挂载点，打包后的js在该页面引入进行渲染，切换路由渲染对应的页面都是前端来实现，客户端渲染SSR 2.MP...</p><p><a href="https://juejin.cn/post/7206264862657200187" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>52 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-03 🏷 <code>算法</code></p><h3 id="_1-谈谈你对vue的理解" tabindex="-1">1.谈谈你对vue的理解 <a class="header-anchor" href="#_1-谈谈你对vue的理解" aria-label="Permalink to &quot;1.谈谈你对vue的理解&quot;">​</a></h3><blockquote><p>1.声明式框架 vue是一种渐进式的框架，组件，vue-router，vuex，pinia，构建工具等功能可以逐步加到项目里面，不需要一下子用，声明式是更加关注结果，不需要关注过程，早在jq时代 （命...</p><p><a href="https://juejin.cn/post/7206264862656643131" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>43 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-03 🏷 <code>面试</code></p>`,138)]))}const b=a(n,[["render",p]]);export{d as __pageData,b as default};
