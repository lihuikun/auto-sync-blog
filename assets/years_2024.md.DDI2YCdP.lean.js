import{_ as t,c as a,a as o,o as r}from"./chunks/framework.DBW9o7tl.js";const u=JSON.parse('{"title":"2024 年度概览","description":"","frontmatter":{},"headers":[],"relativePath":"years/2024.md","filePath":"years/2024.md"}'),n={name:"years/2024.md"};function p(l,e,s,c,h,i){return r(),a("div",null,e[0]||(e[0]=[o('<h1 id="_2024-年度概览" tabindex="-1">2024 年度概览 <a class="header-anchor" href="#_2024-年度概览" aria-label="Permalink to &quot;2024 年度概览&quot;">​</a></h1><h2 id="本年发布-46" tabindex="-1">本年发布 46 <a class="header-anchor" href="#本年发布-46" aria-label="Permalink to &quot;本年发布 46&quot;">​</a></h2><table><thead><tr><th>年份</th><th>总记</th><th>1月</th><th>2月</th><th>3月</th><th>4月</th><th>5月</th><th>6月</th><th>7月</th><th>8月</th><th>9月</th><th>10月</th><th>11月</th><th>12月</th></tr></thead><tbody><tr><td>2024</td><td>46</td><td>2</td><td>5</td><td>16</td><td>5</td><td>4</td><td>5</td><td>5</td><td>-</td><td>4</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="el-tab实现el-table跳转到指定列" tabindex="-1">el-tab实现el-table跳转到指定列 <a class="header-anchor" href="#el-tab实现el-table跳转到指定列" aria-label="Permalink to &quot;el-tab实现el-table跳转到指定列&quot;">​</a></h3><blockquote><p>在实现一个点击tab可以滚动到el-table对应位置这样看似简单的功能背后，其实涉及到了页面布局、DOM操作、事件处理等多个方面的考量和实现细节。 首先，要实现这个功能，需要考虑以下几个方面： 页面...</p><p><a href="https://juejin.cn/post/7411168518753337385" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>276 阅读 · 7 点赞 · 0 评论 · 6 收藏</strong></p><p>📅 2024-09-06 🏷 <code>前端</code></p><h3 id="eltable固定列踩坑之旅" tabindex="-1">eltable固定列踩坑之旅 <a class="header-anchor" href="#eltable固定列踩坑之旅" aria-label="Permalink to &quot;eltable固定列踩坑之旅&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是eltable固定列踩坑之旅 有一个需求就是在el-table上进行编辑，点击填写按钮之后出现el-input，然后进行聚焦，一开始就想着简单，...</p><p><a href="https://juejin.cn/post/7410980982377463862" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>111 阅读 · 5 点赞 · 5 评论 · 8 收藏</strong></p><p>📅 2024-09-05 🏷 <code>前端</code></p><h3 id="minio-个人开发首选的图床" tabindex="-1">minio 个人开发首选的图床 <a class="header-anchor" href="#minio-个人开发首选的图床" aria-label="Permalink to &quot;minio  个人开发首选的图床&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是minio 个人开发首选的图床 什么是minio Minio 是一个开源的对象存储服务器，它兼容 Amazon S3 云存储服务的 API。Mi...</p><p><a href="https://juejin.cn/post/7410776732553855015" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>787 阅读 · 9 点赞 · 0 评论 · 18 收藏</strong></p><p>📅 2024-09-05 🏷 <code>前端</code></p><h3 id="总算体会到jsx写法为啥灵活" tabindex="-1">总算体会到jsx写法为啥灵活 <a class="header-anchor" href="#总算体会到jsx写法为啥灵活" aria-label="Permalink to &quot;总算体会到jsx写法为啥灵活&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是总算体会到jsx写法为啥灵活 什么是jsx写法？ 当谈到JavaScript中的JSX写法时，人们往往会想到React和Vue这样的流行前端框架...</p><p><a href="https://juejin.cn/post/7410672790020800548" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>2165 阅读 · 19 点赞 · 10 评论 · 19 收藏</strong></p><p>📅 2024-09-05 🏷 <code>前端</code></p><h3 id="二次封装element-plus-自定义下拉框可输入次数" tabindex="-1">二次封装element-plus：自定义下拉框可输入次数 <a class="header-anchor" href="#二次封装element-plus-自定义下拉框可输入次数" aria-label="Permalink to &quot;二次封装element-plus：自定义下拉框可输入次数&quot;">​</a></h3><blockquote><p>要实现一个自定义的下拉框，并且包含你提到的几个要点 我们这里需要使用到Vue3模板、计算属性、方法和事件监听等功能。 以下是一个简化的实现思路 输入框的显示与隐藏： 使用v-if或v-show来控制输...</p><p><a href="https://juejin.cn/post/7395849559388258315" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>604 阅读 · 12 点赞 · 2 评论 · 13 收藏</strong></p><p>📅 2024-07-27 🏷 <code>前端</code></p><h3 id="如何让你的github主页与众不同" tabindex="-1">如何让你的github主页与众不同 <a class="header-anchor" href="#如何让你的github主页与众不同" aria-label="Permalink to &quot;如何让你的github主页与众不同&quot;">​</a></h3><blockquote><p>--- theme: scrolls-light --- <strong>前言</strong> 大家好，我是`你不会困...</p><p><a href="https://juejin.cn/post/7395868215610327052" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>95 阅读 · 11 点赞 · 1 评论 · 12 收藏</strong></p><p>📅 2024-07-26 🏷 <code>前端</code></p><h3 id="github搭建个人图床" tabindex="-1">github搭建个人图床 <a class="header-anchor" href="#github搭建个人图床" aria-label="Permalink to &quot;github搭建个人图床&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是github搭建个人图床 当搭建一个图床服务器时，你可以考虑使用 GitHub 来存储和管理图片，并通过 GitHub Pages 来提供外部访...</p><p><a href="https://juejin.cn/post/7395108335764684815" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>378 阅读 · 12 点赞 · 9 评论 · 15 收藏</strong></p><p>📅 2024-07-25 🏷 <code>前端</code></p><h3 id="huggingface创建无需魔法的gpt" tabindex="-1">huggingface创建无需魔法的gpt <a class="header-anchor" href="#huggingface创建无需魔法的gpt" aria-label="Permalink to &quot;huggingface创建无需魔法的gpt&quot;">​</a></h3><blockquote><p>huggingface是啥？？ Hugging Face是一家人工智能公司，也是一个知名的开源社区，致力于推动自然语言处理（NLP）和人工智能技术的发展。该公司提供了一个名为Transformers的...</p><p><a href="https://juejin.cn/post/7395043012466147343" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>193 阅读 · 11 点赞 · 2 评论 · 11 收藏</strong></p><p>📅 2024-07-24 🏷 <code>前端</code></p><h3 id="「豆包marscode体验官」从0搭建自己的node服务器" tabindex="-1">「豆包Marscode体验官」从0搭建自己的node服务器 <a class="header-anchor" href="#「豆包marscode体验官」从0搭建自己的node服务器" aria-label="Permalink to &quot;「豆包Marscode体验官」从0搭建自己的node服务器&quot;">​</a></h3><blockquote><p>我正在参加「豆包MarsCode初体验」征文活动 一、项目背景 2024年，大量ai呈现爆发式增长，最近也看到一个由稀土掘金发起的ai 代码编辑器的体验活动，简单的看了一下介绍，然后就开始上手了，也有...</p><p><a href="https://juejin.cn/post/7389579792511057983" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>103 阅读 · 3 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-07-09 🏷 <code>前端</code></p><h3 id="nuxt3-sass的全局函数配置" tabindex="-1">nuxt3 sass的全局函数配置 <a class="header-anchor" href="#nuxt3-sass的全局函数配置" aria-label="Permalink to &quot;nuxt3 sass的全局函数配置&quot;">​</a></h3><blockquote><p>前言 当在开发中需要适配不同屏幕尺寸下的样式时，可以使用 SCSS 的函数来编写样式。你可以...</p><p><a href="https://juejin.cn/post/7383457343877595175" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>388 阅读 · 13 点赞 · 2 评论 · 11 收藏</strong></p><p>📅 2024-06-24 🏷 <code>前端</code></p><h3 id="nuxt3之国际化i18n" tabindex="-1">nuxt3之国际化i18n <a class="header-anchor" href="#nuxt3之国际化i18n" aria-label="Permalink to &quot;nuxt3之国际化i18n&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是nuxt3之国际化i18n 国际化是在应用程序中实现多语言支持的重要方面之一。在处理国际化时，可以使用不同的方法来实现数据持久化和页面初始化的查...</p><p><a href="https://juejin.cn/post/7383017171180683318" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>458 阅读 · 16 点赞 · 1 评论 · 17 收藏</strong></p><p>📅 2024-06-23 🏷 <code>前端</code></p><h3 id="nuxt3-踩坑之旅-与传统的vue项目不同之处" tabindex="-1">nuxt3 踩坑之旅---与传统的vue项目不同之处 <a class="header-anchor" href="#nuxt3-踩坑之旅-与传统的vue项目不同之处" aria-label="Permalink to &quot;nuxt3 踩坑之旅---与传统的vue项目不同之处&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是nuxt3 踩坑之旅---与传统的vue项目不同之处 Nuxt.js 内置了许多功能和插件，以简化 Vue.js 应用程序的开发。以下是一些常用...</p><p><a href="https://juejin.cn/post/7382891971898490934" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>661 阅读 · 14 点赞 · 1 评论 · 12 收藏</strong></p><p>📅 2024-06-23 🏷 <code>前端</code></p><h3 id="nuxt3-前端规范eslint工具-antfu使用" tabindex="-1">nuxt3 前端规范eslint工具@antfu使用 <a class="header-anchor" href="#nuxt3-前端规范eslint工具-antfu使用" aria-label="Permalink to &quot;nuxt3 前端规范eslint工具@antfu使用&quot;">​</a></h3><blockquote><p>前言 大家好，我是你不会困，写代码就不会困，今天分享的是前端规范eslint工具@antfu使用 在前端开发中，代码质量和风格的一致性是非常重要的。 为了实现这一目标，许多开发者和团队选择使用ESLi...</p><p><a href="https://juejin.cn/post/7382890605682884671" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>633 阅读 · 15 点赞 · 1 评论 · 14 收藏</strong></p><p>📅 2024-06-22 🏷 <code>前端</code></p><h3 id="v-for调用子组件暴露给父组件的方法" tabindex="-1">v-for调用子组件暴露给父组件的方法 <a class="header-anchor" href="#v-for调用子组件暴露给父组件的方法" aria-label="Permalink to &quot;v-for调用子组件暴露给父组件的方法&quot;">​</a></h3><blockquote><p>子组件通过暴露方法给到父组件调用 父组件通过ref调用子组件的方法，这里需要进行唯一的ref注册，如果不唯一就无法获取到对应的ref去调用，因为v-for生成的ref是一个数组 调用方法...</p><p><a href="https://juejin.cn/post/7379221811240108059" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>13 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-06-12 🏷 <code>前端</code></p><h3 id="_0费用使用vite搭建个人博客网站" tabindex="-1">0费用使用vite搭建个人博客网站 <a class="header-anchor" href="#_0费用使用vite搭建个人博客网站" aria-label="Permalink to &quot;0费用使用vite搭建个人博客网站&quot;">​</a></h3><blockquote><p>最近看到一个博主使用免费的服务器部署个人博客项目，想着自己可以来练练手vitepress项目，了解一...</p><p><a href="https://juejin.cn/post/7372577541113298956" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>858 阅读 · 21 点赞 · 6 评论 · 19 收藏</strong></p><p>📅 2024-05-26 🏷 <code>Node.js</code></p><h3 id="vite实现前端项目打包更新通知用户更新" tabindex="-1">vite实现前端项目打包更新通知用户更新 <a class="header-anchor" href="#vite实现前端项目打包更新通知用户更新" aria-label="Permalink to &quot;vite实现前端项目打包更新通知用户更新&quot;">​</a></h3><blockquote><p>--- theme: lilsnake --- 在前端项目中，为了实现对版本迭代更新的监控以及页面的...</p><p><a href="https://juejin.cn/post/7372463538680905740" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1227 阅读 · 24 点赞 · 4 评论 · 28 收藏</strong></p><p>📅 2024-05-26 🏷 <code>Vite</code></p><h3 id="_0费用使用vite搭建个人博客网站-1" tabindex="-1">0费用使用vite搭建个人博客网站---1 <a class="header-anchor" href="#_0费用使用vite搭建个人博客网站-1" aria-label="Permalink to &quot;0费用使用vite搭建个人博客网站---1&quot;">​</a></h3><blockquote><p>搭建个人博客网站，可以使用vitepress去生成， VitePress 是一款由 Vite 支持的轻量级文档框架，它灵感来源于 VuePress，与 VuePress 类似，使用 Vue 和 Mar...</p><p><a href="https://juejin.cn/post/7371373024241795091" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>302 阅读 · 12 点赞 · 0 评论 · 10 收藏</strong></p><p>📅 2024-05-22 🏷 <code>前端</code></p><h3 id="github-actions实现定时任务-免费运行" tabindex="-1">GitHub Actions实现定时任务，免费运行 <a class="header-anchor" href="#github-actions实现定时任务-免费运行" aria-label="Permalink to &quot;GitHub Actions实现定时任务，免费运行&quot;">​</a></h3><blockquote><p>GitHub Actions是GitHub的持续集成和持续部署（CI/CD）平台，允许开发者自动化他...</p><p><a href="https://juejin.cn/post/7371319684841897995" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>313 阅读 · 13 点赞 · 8 评论 · 10 收藏</strong></p><p>📅 2024-05-22 🏷 <code>Node.js</code></p><h3 id="一文讲清楚node-js事件循环机制" tabindex="-1">一文讲清楚node.js事件循环机制 <a class="header-anchor" href="#一文讲清楚node-js事件循环机制" aria-label="Permalink to &quot;一文讲清楚node.js事件循环机制&quot;">​</a></h3><blockquote><p>node.js事件循环机制 timers阶段：这个阶段执行timer（setTimeout、setInterval）的回调 定时器检测阶段(timers)：本阶段执行 timer 的回调，即 setT...</p><p><a href="https://juejin.cn/post/7356625386665410560" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>37 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-04-12 🏷 <code>前端</code></p><h3 id="一文讲清楚阿里云文件上传" tabindex="-1">一文讲清楚阿里云文件上传 <a class="header-anchor" href="#一文讲清楚阿里云文件上传" aria-label="Permalink to &quot;一文讲清楚阿里云文件上传&quot;">​</a></h3><blockquote><p>在当今的数字时代，文件存储与分享已变得日益重要，阿里云提供了一个高效稳定的服务解决方案，用户可以利用阿里云的对象存储服务OSS（Object Storage Service）实现文件上传、下载和管理等...</p><p><a href="https://juejin.cn/post/7356445125451120675" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>150 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-04-12 🏷 <code>前端</code></p><h3 id="一文说清楚腾讯云上传文件" tabindex="-1">一文说清楚腾讯云上传文件 <a class="header-anchor" href="#一文说清楚腾讯云上传文件" aria-label="Permalink to &quot;一文说清楚腾讯云上传文件&quot;">​</a></h3><blockquote><p>如果你的后端不提供接口去上传到腾讯云，你能怎么办呢？ 遇到这样的后端，只能自己实现呗 但是后端却给你提供上传的密钥接口，只能说做事只做一半，就是不给做文件接口 那我们前端只能去腾讯云的官网查看文档 对...</p><p><a href="https://juejin.cn/post/7356208563100909619" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>89 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-04-11 🏷 <code>前端</code></p><h3 id="纯css实现关系图" tabindex="-1">纯css实现关系图 <a class="header-anchor" href="#纯css实现关系图" aria-label="Permalink to &quot;纯css实现关系图&quot;">​</a></h3><blockquote><p>CSS 关系图简介 CSS 关系图, 是指以图表形式展示 CSS 选择器以及它们之间如何相互关联、层叠和覆盖。这个概念是基于CSS的层叠性质和选择器的优先级规则。这种图形化的表示方式帮助开发者可视化地...</p><p><a href="https://juejin.cn/post/7355873951535054882" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>378 阅读 · 11 点赞 · 0 评论 · 19 收藏</strong></p><p>📅 2024-04-10 🏷 <code>前端</code></p><h3 id="浏览器空闲api性能优化-动态插入dom" tabindex="-1">浏览器空闲api性能优化---动态插入dom <a class="header-anchor" href="#浏览器空闲api性能优化-动态插入dom" aria-label="Permalink to &quot;浏览器空闲api性能优化---动态插入dom&quot;">​</a></h3><blockquote><p>一、概念 requestIdleCallback 是一个Web API，它安排在浏览器的空闲期间运行 JavaScript 函数。 requestAnimationFrame: 这个API通常用于动画...</p><p><a href="https://juejin.cn/post/7355765560707678223" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1013 阅读 · 13 点赞 · 0 评论 · 32 收藏</strong></p><p>📅 2024-04-10 🏷 <code>前端</code></p><h3 id="node-ffmpeg实现视频切片" tabindex="-1">node+ffmpeg实现视频切片 <a class="header-anchor" href="#node-ffmpeg实现视频切片" aria-label="Permalink to &quot;node+ffmpeg实现视频切片&quot;">​</a></h3><blockquote><p>node后端使用express搭建两个接口 一个是获取视频流，一个是上传视频并进行切片 实现的效果： 上传视频接口 获取播放接口 前端使用视频播放器 写一个方法进行视频流播放 使用的是video.js...</p><p><a href="https://juejin.cn/post/7350868298827284530" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-27 🏷 <code>后端</code></p><h3 id="写了一个node来获取电脑的配置信息" tabindex="-1">写了一个node来获取电脑的配置信息 <a class="header-anchor" href="#写了一个node来获取电脑的配置信息" aria-label="Permalink to &quot;写了一个node来获取电脑的配置信息&quot;">​</a></h3><blockquote><p>没事使用node的第三方依赖库来获取电脑的配置信息，主要是获取cpu，操作系统，磁盘，网络接口等信息，...</p><p><a href="https://juejin.cn/post/7347207466819158055" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>45 阅读 · 1 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2024-03-18 🏷 <code>后端</code></p><h3 id="用一个微信测试号和node写了个定时天气预报" tabindex="-1">用一个微信测试号和node写了个定时天气预报 <a class="header-anchor" href="#用一个微信测试号和node写了个定时天气预报" aria-label="Permalink to &quot;用一个微信测试号和node写了个定时天气预报&quot;">​</a></h3><blockquote><p>微信公众号要实现定时发消息，只能是认证的服务号，因为发送模板消息目前微信只对认证的服务号开放 申请测试号 为什么是测试号呢? 申请地址  如果你本地测试就不需要输入对应的服务器Url、token 然后...</p><p><a href="https://juejin.cn/post/7347009547775557644" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>83 阅读 · 1 点赞 · 0 评论 · 2 收藏</strong></p><p>📅 2024-03-18 🏷 <code>后端</code></p><h3 id="写了一个每天定时发送邮件的爬虫" tabindex="-1">写了一个每天定时发送邮件的爬虫 <a class="header-anchor" href="#写了一个每天定时发送邮件的爬虫" aria-label="Permalink to &quot;写了一个每天定时发送邮件的爬虫&quot;">​</a></h3><blockquote><p>结合上一章的掘金首页词云图，把生成的词云图进行邮件发送到指定邮箱 写了一个node+python的爬虫小工具玩玩 这里可以使用自己的两个邮箱（一个发一个接收） 最终效果图： 首先发送的邮件要支持s...</p><p><a href="https://juejin.cn/post/7346501899662147647" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-16 🏷 <code>后端</code></p><h3 id="写了一个node-python的爬虫小工具玩玩" tabindex="-1">写了一个node+python的爬虫小工具玩玩 <a class="header-anchor" href="#写了一个node-python的爬虫小工具玩玩" aria-label="Permalink to &quot;写了一个node+python的爬虫小工具玩玩&quot;">​</a></h3><blockquote><p>什么是爬虫？ 爬虫，也称为网络爬虫或网络蜘蛛，是指一种自动化程序或脚本，用于在互联网上浏览和提取信息。爬虫模拟人类用户在网页上的行为，通过HTTP协议发送请求，获取网页内容，然后解析并提取感兴趣的数据...</p><p><a href="https://juejin.cn/post/7346387831399497764" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>268 阅读 · 1 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2024-03-15 🏷 <code>前端</code></p><h3 id="前端常见手写题" tabindex="-1">前端常见手写题 <a class="header-anchor" href="#前端常见手写题" aria-label="Permalink to &quot;前端常见手写题&quot;">​</a></h3><blockquote><p>1.Promise 2.new 3.call，参数是以逗号分开的 4.apply,参数是一个数组 5.bind类似call，但返回的是函数 三种的区别 6.递归拷贝...</p><p><a href="https://juejin.cn/post/7345774436703141951" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>19 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-14 🏷 <code>前端</code></p><h3 id="js的高阶函数以及应用场景" tabindex="-1">js的高阶函数以及应用场景 <a class="header-anchor" href="#js的高阶函数以及应用场景" aria-label="Permalink to &quot;js的高阶函数以及应用场景&quot;">​</a></h3><blockquote><p>JavaScript 中的高阶函数是指接收函数作为参数，或者将函数作为返回值的函数。 这些函数提供了强大的抽象能力，使得代码更加灵活和表达力强。下面列举了一些常见的高阶函数及其应用场景： 数组操作: ...</p><p><a href="https://juejin.cn/post/7345105927359365174" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>17 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="js中的export-和export-default-有啥区别" tabindex="-1">js中的export 和export default，有啥区别 <a class="header-anchor" href="#js中的export-和export-default-有啥区别" aria-label="Permalink to &quot;js中的export 和export default，有啥区别&quot;">​</a></h3><blockquote><p>在 JavaScript 中，export 和 export default 是 ES6 模块系统中用于导出模块的两种不同语法。 export: 使用 export 可以导出多个值，它们可以是变量、函...</p><p><a href="https://juejin.cn/post/7345105895930494987" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="给定一个url和key-查找key是否在url的查询字符串中-如果在就返回-不在就返回null-存在多个就返回数组" tabindex="-1">给定一个url和key，查找key是否在url的查询字符串中，如果在就返回，不在就返回null，存在多个就返回数组 <a class="header-anchor" href="#给定一个url和key-查找key是否在url的查询字符串中-如果在就返回-不在就返回null-存在多个就返回数组" aria-label="Permalink to &quot;给定一个url和key，查找key是否在url的查询字符串中，如果在就返回，不在就返回null，存在多个就返回数组&quot;">​</a></h3><blockquote><p>这个任务可以通过解析 URL 的查询字符串来完成。在 JavaScript 中，可以使用 URL 和 URLSearchParams 对象来解析查询字符串并搜索特定的键。以下是一个函数示例，它接受一个...</p><p><a href="https://juejin.cn/post/7345105816242749479" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>21 阅读 · 1 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="有这样一个需求-后端返回大量数据-如何保证用户滚动的性能-切换横屏如何保证resize的性能" tabindex="-1">有这样一个需求，后端返回大量数据，如何保证用户滚动的性能，切换横屏如何保证resize的性能？ <a class="header-anchor" href="#有这样一个需求-后端返回大量数据-如何保证用户滚动的性能-切换横屏如何保证resize的性能" aria-label="Permalink to &quot;有这样一个需求，后端返回大量数据，如何保证用户滚动的性能，切换横屏如何保证resize的性能？&quot;">​</a></h3><blockquote><p>面对大量数据和动态屏幕尺寸调整时，维护良好的前端性能是一项挑战，但可以通过各种策略来实现。下面是针对上述需求的一些建议： 如何保证用户滚动的性能： 虚拟滚动（Virtual Scrolling）/窗口...</p><p><a href="https://juejin.cn/post/7345105895930396683" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>38 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="web项目版本管理-要求用户不主动刷新-完成web的更新" tabindex="-1">web项目版本管理，要求用户不主动刷新，完成web的更新 <a class="header-anchor" href="#web项目版本管理-要求用户不主动刷新-完成web的更新" aria-label="Permalink to &quot;web项目版本管理，要求用户不主动刷新，完成web的更新&quot;">​</a></h3><blockquote><ol><li>使用 Service Workers Service Workers 是一种运行在浏览器背后的脚本，它可以拦截和处理网络请求，包括文件的缓存。通过它，你可以控制文件的缓存，并在后台更新文件，而不...</li></ol><p><a href="https://juejin.cn/post/7345105895930347531" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="如何保证同时请求五个接口保证按照顺序输出结果" tabindex="-1">如何保证同时请求五个接口保证按照顺序输出结果 <a class="header-anchor" href="#如何保证同时请求五个接口保证按照顺序输出结果" aria-label="Permalink to &quot;如何保证同时请求五个接口保证按照顺序输出结果&quot;">​</a></h3><blockquote><p>1.使用 Async/Await 使用 async/await 可以使异步代码看起来更像同步代码，可以按顺序等待每个异步操作完成。（缺点无法同时发起请求） 2.使用 Promise.all 如果你不需...</p><p><a href="https://juejin.cn/post/7345105895930150923" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>90 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-12 🏷 <code>前端</code></p><h3 id="_2024年-你还不会部署自己的node项目" tabindex="-1">2024年，你还不会部署自己的node项目？ <a class="header-anchor" href="#_2024年-你还不会部署自己的node项目" aria-label="Permalink to &quot;2024年，你还不会部署自己的node项目？&quot;">​</a></h3><blockquote><p>部署 Node.js 应用涉及多个步骤，包括准备服务器环境、上传代码、安装依赖、配置环境变量、启动应用以及设置反向代理和持久化。以下是一个基本的 Node.js 应用部署教程，以部署到 Linux 服...</p><p><a href="https://juejin.cn/post/7342527074525659172" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>299 阅读 · 1 点赞 · 1 评论 · 1 收藏</strong></p><p>📅 2024-03-05 🏷 <code>前端</code> <code>后端</code></p><h3 id="第3节-创建第一个-uniapp-项目" tabindex="-1">第3节：创建第一个 UniApp 项目 <a class="header-anchor" href="#第3节-创建第一个-uniapp-项目" aria-label="Permalink to &quot;第3节：创建第一个 UniApp 项目&quot;">​</a></h3><blockquote><p>引言 在成功搭建了开发环境之后，我们即将迈出实际开发的第一步——创建我们的第一个 UniApp 项目。这一节将详细指导您如何创建一个新的项目，并介绍项目的基本结构和关键文件。通过本节的学习，您将能够开...</p><p><a href="https://juejin.cn/post/7342038143162810404" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>42 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-04 🏷 <code>前端</code> <code>后端</code></p><h3 id="第2节-环境搭建-安装-hbuilderx-和微信开发者工具" tabindex="-1">第2节：环境搭建：安装 HBuilderX 和微信开发者工具 <a class="header-anchor" href="#第2节-环境搭建-安装-hbuilderx-和微信开发者工具" aria-label="Permalink to &quot;第2节：环境搭建：安装 HBuilderX 和微信开发者工具&quot;">​</a></h3><blockquote><p>引言 在开始我们的 UniApp 云开发之旅之前，搭建一个稳定且高效的开发环境是至关重要的第一步。本节课将详细指导您如何安装和配置两个关键的开发工具：HBuilderX 和微信开发者工具。这些工具将为...</p><p><a href="https://juejin.cn/post/7341983885727285287" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>113 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-04 🏷 <code>前端</code> <code>后端</code></p><h3 id="第1节-课程介绍与准备工作" tabindex="-1">第1节：课程介绍与准备工作 <a class="header-anchor" href="#第1节-课程介绍与准备工作" aria-label="Permalink to &quot;第1节：课程介绍与准备工作&quot;">​</a></h3><blockquote><p>欢迎各位加入这次的学习旅程，在这个“UniApp 云开发实战：零基础打造微信小程序”课程中，我们将共同探索如何从零开始，利用 UniApp 这一强大的跨平台开发框架，结合uniapp云开发（uniCl...</p><p><a href="https://juejin.cn/post/7341805821527769107" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>33 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-04 🏷 <code>前端</code> <code>后端</code></p><h3 id="_4-express-框架概述" tabindex="-1">4.Express 框架概述 <a class="header-anchor" href="#_4-express-框架概述" aria-label="Permalink to &quot;4.Express 框架概述&quot;">​</a></h3><blockquote><p>Express 是一个快速、灵活且简洁的 Node.js Web 应用程序框架。它提供了一组强大的特性和工具，使开发人员能够轻松地构建各种类型的 Web 应用和 API。本文将详细介绍 Express...</p><p><a href="https://juejin.cn/post/7340307383505649704" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>69 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_3-怎么理解-npm-和-package-json" tabindex="-1">3.怎么理解 npm 和 package.json <a class="header-anchor" href="#_3-怎么理解-npm-和-package-json" aria-label="Permalink to &quot;3.怎么理解 npm 和 package.json&quot;">​</a></h3><blockquote><p>npm（Node Package Manager）是 Node.js 的包管理工具，用于安装、管理和共享 JavaScript 代码库。 它是 Node.js 生态系统的核心组件之一，为开发人员提供了...</p><p><a href="https://juejin.cn/post/7340275706499006504" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_2-如何安装设置-node-js-开发环境" tabindex="-1">2.如何安装设置 Node.js 开发环境 <a class="header-anchor" href="#_2-如何安装设置-node-js-开发环境" aria-label="Permalink to &quot;2.如何安装设置 Node.js 开发环境&quot;">​</a></h3><blockquote><p>设置和安装 Node.js 开发环境是开始使用 Node.js 的第一步。 推荐使用16版本以上，过于旧的版本对后续的项目开发可能有问题 下面是一个简单的指南，介绍如何在不同的操作系统上安装和配置 N...</p><p><a href="https://juejin.cn/post/7340295805999513634" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>36 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_1-初识node-js" tabindex="-1">1.初识Node.js <a class="header-anchor" href="#_1-初识node-js" aria-label="Permalink to &quot;1.初识Node.js&quot;">​</a></h3><blockquote><p>node.js是啥 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时环境，用于构建高性能、可扩展的网络应用程序。它采用事件驱动、非阻塞的 I/O 模型，使得开发人员...</p><p><a href="https://juejin.cn/post/7340275706498908200" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>26 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="前后端实现分片上传大文件" tabindex="-1">前后端实现分片上传大文件 <a class="header-anchor" href="#前后端实现分片上传大文件" aria-label="Permalink to &quot;前后端实现分片上传大文件&quot;">​</a></h3><blockquote><p>一、node后端 1.上传接口存储位置，我是合并接口，前端判断大于5M就分片上传，创建临时文件，后续合并之后就删除临时文件夹，存放的路径是项目的src/uploads 2.上传接口，获取分片信息并存入...</p><p><a href="https://juejin.cn/post/7339746416929488911" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>45 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-26 🏷 <code>前端</code> <code>后端</code> <code>React.js</code></p><h3 id="element的表格列过滤-实现自定义方法" tabindex="-1">element的表格列过滤，实现自定义方法 <a class="header-anchor" href="#element的表格列过滤-实现自定义方法" aria-label="Permalink to &quot;element的表格列过滤，实现自定义方法&quot;">​</a></h3><blockquote><p>首先了解一下表格列的筛选 这里是对当前的表格的每一行进行过滤，缺点就是要每一行都进行过滤，如果操作不当就会导致死循环，页面卡死，并且不能进行全局过滤，也就是只能分页的这一页，后面的分页数据不会过滤，导...</p><p><a href="https://juejin.cn/post/7328204968636481574" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>40 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-01-26 🏷 <code>前端</code></p><h3 id="react面试" tabindex="-1">react面试 <a class="header-anchor" href="#react面试" aria-label="Permalink to &quot;react面试&quot;">​</a></h3><blockquote><p>Fiber就是控制优先级，然后进行随时中断，浏览器原生的api requestIdleCallback，兼容性不高，所以react写Fiber进行兼容...</p><p><a href="https://juejin.cn/post/7321049436351299611" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>56 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-01-07 🏷 <code>前端</code></p>',188)]))}const b=t(n,[["render",p]]);export{u as __pageData,b as default};
