import{_ as o,c as a,a as r,o as t}from"./chunks/framework.DBW9o7tl.js";const u=JSON.parse('{"title":"node全栈本地存储项目","description":"","frontmatter":{},"headers":[],"relativePath":"columns/7339560770458501120.md","filePath":"columns/7339560770458501120.md"}'),n={name:"columns/7339560770458501120.md"};function s(p,e,d,c,l,h){return t(),a("div",null,e[0]||(e[0]=[r('<h1 id="node全栈本地存储项目" tabindex="-1">node全栈本地存储项目 <a class="header-anchor" href="#node全栈本地存储项目" aria-label="Permalink to &quot;node全栈本地存储项目&quot;">​</a></h1><h2 id="内容介绍" tabindex="-1">内容介绍 <a class="header-anchor" href="#内容介绍" aria-label="Permalink to &quot;内容介绍&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>node全栈本地存储项目</p></div><h2 id="数据统计" tabindex="-1">数据统计 <a class="header-anchor" href="#数据统计" aria-label="Permalink to &quot;数据统计&quot;">​</a></h2><p><strong>7 文章 · 0 订阅</strong></p><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="node-ffmpeg实现视频切片" tabindex="-1">node+ffmpeg实现视频切片 <a class="header-anchor" href="#node-ffmpeg实现视频切片" aria-label="Permalink to &quot;node+ffmpeg实现视频切片&quot;">​</a></h3><blockquote><p>node后端使用express搭建两个接口 一个是获取视频流，一个是上传视频并进行切片 实现的效果： 上传视频接口 获取播放接口 前端使用视频播放器 写一个方法进行视频流播放 使用的是video.js...</p><p><a href="https://juejin.cn/post/7350868298827284530" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-03-27 🏷 <code>后端</code></p><h3 id="_2024年-你还不会部署自己的node项目" tabindex="-1">2024年，你还不会部署自己的node项目？ <a class="header-anchor" href="#_2024年-你还不会部署自己的node项目" aria-label="Permalink to &quot;2024年，你还不会部署自己的node项目？&quot;">​</a></h3><blockquote><p>部署 Node.js 应用涉及多个步骤，包括准备服务器环境、上传代码、安装依赖、配置环境变量、启动应用以及设置反向代理和持久化。以下是一个基本的 Node.js 应用部署教程，以部署到 Linux 服...</p><p><a href="https://juejin.cn/post/7342527074525659172" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>300 阅读 · 1 点赞 · 1 评论 · 1 收藏</strong></p><p>📅 2024-03-05 🏷 <code>前端</code> <code>后端</code></p><h3 id="_4-express-框架概述" tabindex="-1">4.Express 框架概述 <a class="header-anchor" href="#_4-express-框架概述" aria-label="Permalink to &quot;4.Express 框架概述&quot;">​</a></h3><blockquote><p>Express 是一个快速、灵活且简洁的 Node.js Web 应用程序框架。它提供了一组强大的特性和工具，使开发人员能够轻松地构建各种类型的 Web 应用和 API。本文将详细介绍 Express...</p><p><a href="https://juejin.cn/post/7340307383505649704" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>69 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_3-怎么理解-npm-和-package-json" tabindex="-1">3.怎么理解 npm 和 package.json <a class="header-anchor" href="#_3-怎么理解-npm-和-package-json" aria-label="Permalink to &quot;3.怎么理解 npm 和 package.json&quot;">​</a></h3><blockquote><p>npm（Node Package Manager）是 Node.js 的包管理工具，用于安装、管理和共享 JavaScript 代码库。 它是 Node.js 生态系统的核心组件之一，为开发人员提供了...</p><p><a href="https://juejin.cn/post/7340275706499006504" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_2-如何安装设置-node-js-开发环境" tabindex="-1">2.如何安装设置 Node.js 开发环境 <a class="header-anchor" href="#_2-如何安装设置-node-js-开发环境" aria-label="Permalink to &quot;2.如何安装设置 Node.js 开发环境&quot;">​</a></h3><blockquote><p>设置和安装 Node.js 开发环境是开始使用 Node.js 的第一步。 推荐使用16版本以上，过于旧的版本对后续的项目开发可能有问题 下面是一个简单的指南，介绍如何在不同的操作系统上安装和配置 N...</p><p><a href="https://juejin.cn/post/7340295805999513634" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>36 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="_1-初识node-js" tabindex="-1">1.初识Node.js <a class="header-anchor" href="#_1-初识node-js" aria-label="Permalink to &quot;1.初识Node.js&quot;">​</a></h3><blockquote><p>node.js是啥 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时环境，用于构建高性能、可扩展的网络应用程序。它采用事件驱动、非阻塞的 I/O 模型，使得开发人员...</p><p><a href="https://juejin.cn/post/7340275706498908200" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>26 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-28 🏷 <code>Node.js</code></p><h3 id="前后端实现分片上传大文件" tabindex="-1">前后端实现分片上传大文件 <a class="header-anchor" href="#前后端实现分片上传大文件" aria-label="Permalink to &quot;前后端实现分片上传大文件&quot;">​</a></h3><blockquote><p>一、node后端 1.上传接口存储位置，我是合并接口，前端判断大于5M就分片上传，创建临时文件，后续合并之后就删除临时文件夹，存放的路径是项目的src/uploads 2.上传接口，获取分片信息并存入...</p><p><a href="https://juejin.cn/post/7339746416929488911" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>45 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2024-02-26 🏷 <code>前端</code> <code>后端</code> <code>React.js</code></p>',34)]))}const b=o(n,[["render",s]]);export{u as __pageData,b as default};
