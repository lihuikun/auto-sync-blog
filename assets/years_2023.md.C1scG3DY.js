import{_ as a,c as t,a as o,o as r}from"./chunks/framework.DBW9o7tl.js";const u=JSON.parse('{"title":"2023 年度概览","description":"","frontmatter":{},"headers":[],"relativePath":"years/2023.md","filePath":"years/2023.md"}'),n={name:"years/2023.md"};function p(s,e,l,c,i,h){return r(),t("div",null,e[0]||(e[0]=[o(`<h1 id="_2023-年度概览" tabindex="-1">2023 年度概览 <a class="header-anchor" href="#_2023-年度概览" aria-label="Permalink to &quot;2023 年度概览&quot;">​</a></h1><h2 id="本年发布-173" tabindex="-1">本年发布 173 <a class="header-anchor" href="#本年发布-173" aria-label="Permalink to &quot;本年发布 173&quot;">​</a></h2><table><thead><tr><th>年份</th><th>总记</th><th>1月</th><th>2月</th><th>3月</th><th>4月</th><th>5月</th><th>6月</th><th>7月</th><th>8月</th><th>9月</th><th>10月</th><th>11月</th><th>12月</th></tr></thead><tbody><tr><td>2023</td><td>173</td><td>25</td><td>33</td><td>38</td><td>7</td><td>33</td><td>6</td><td>7</td><td>5</td><td>11</td><td>5</td><td>-</td><td>3</td></tr></tbody></table><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="flutter" tabindex="-1">flutter <a class="header-anchor" href="#flutter" aria-label="Permalink to &quot;flutter&quot;">​</a></h3><blockquote><p>1.无状态组件StatelessWidget， 快捷代码块 示例代码 2.有状态组件StatefulWidget 动态循环列表，可以使用for或者map去生成，但是listView.builder更加...</p><p><a href="https://juejin.cn/post/7313242107681734682" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>32 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-12-17 🏷 <code>前端</code></p><h3 id="uniapp开启代理-gzip" tabindex="-1">uniapp开启代理，gzip <a class="header-anchor" href="#uniapp开启代理-gzip" aria-label="Permalink to &quot;uniapp开启代理，gzip&quot;">​</a></h3><blockquote><p>代码 去到项目的根目录，cmd打开终端，下载指定版本的，最新版本的gzip工具会打包失败 npm install compression-webpack-plugin@3.1.0 --save-dev...</p><p><a href="https://juejin.cn/post/7310028335480045587" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>42 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-12-08 🏷 <code>前端</code></p><h3 id="jdk" tabindex="-1">jdk <a class="header-anchor" href="#jdk" aria-label="Permalink to &quot;jdk&quot;">​</a></h3><blockquote><p>jdk1.8 <a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noreferrer">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a>...</p><p><a href="https://juejin.cn/post/7309761475525165090" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>15 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-12-07 🏷 <code>前端</code></p><h3 id="react-antd快速搭建crud页面" tabindex="-1">react antd快速搭建crud页面 <a class="header-anchor" href="#react-antd快速搭建crud页面" aria-label="Permalink to &quot;react antd快速搭建crud页面&quot;">​</a></h3><blockquote><p>日常的crud页面分为筛选、表格、分页 使用react和antd快速搭建页面，只需简单配置json即可 对按钮级别进行二次封装，主要是点击弹出modal 里面是常见add，delete，edit三种按...</p><p><a href="https://juejin.cn/post/7294082825278963721" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>274 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-10-26 🏷 <code>前端</code></p><h3 id="webpack打包代码分割-进行性能优化" tabindex="-1">webpack打包代码分割，进行性能优化 <a class="header-anchor" href="#webpack打包代码分割-进行性能优化" aria-label="Permalink to &quot;webpack打包代码分割，进行性能优化&quot;">​</a></h3><blockquote><p>今天对一个老项目进行性能优化，首先是安装可视化打包工具进行分析 发现被全部打包到一个文件里面，导致文件过大，加载白屏时间过长 对他进行代码分割之后的 文件体积不变，单个文件的就变小了 编写一个数组进行...</p><p><a href="https://juejin.cn/post/7291513759470436391" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>56 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-10-19 🏷 <code>前端</code></p><h3 id="使用react重构vue项目" tabindex="-1">使用react重构vue项目 <a class="header-anchor" href="#使用react重构vue项目" aria-label="Permalink to &quot;使用react重构vue项目&quot;">​</a></h3><blockquote><p>最大的变化就是redux和组件的连接 对于重复的dom元素代码可以封装成函数进行传参，大大简化代码，提高代码的复用性 避免在return里面使用大量的dom元素，可以将其提取成函数放在return外面...</p><p><a href="https://juejin.cn/post/7291134715860008999" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>30 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-10-18 🏷 <code>前端</code></p><h3 id="react-登录表单记住账号和密码" tabindex="-1">react 登录表单记住账号和密码 <a class="header-anchor" href="#react-登录表单记住账号和密码" aria-label="Permalink to &quot;react 登录表单记住账号和密码&quot;">​</a></h3><blockquote><div class="language-import vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">import</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7290138730093822009)</span></span></code></pre></div></blockquote><p>📊 <strong>64 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-10-16 🏷 <code>前端</code></p><h3 id="react多级表单封装思路" tabindex="-1">react多级表单封装思路 <a class="header-anchor" href="#react多级表单封装思路" aria-label="Permalink to &quot;react多级表单封装思路&quot;">​</a></h3><blockquote><p>react多级表单封装思路，采用hooks组件的写法，把组件放在数组里面，解构拿到组件的变量和方法。...</p><p><a href="https://juejin.cn/post/7284417436753346621" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>27 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-10-03 🏷 <code>前端</code></p><h3 id="threejs" tabindex="-1">threejs <a class="header-anchor" href="#threejs" aria-label="Permalink to &quot;threejs&quot;">​</a></h3><blockquote><p>关键代码 完整代码 放大和旋转 自适应 创建三角形 gui调试关键代码 完整代码 放大和旋转 自适应 创建三角形 gui调试...</p><p><a href="https://juejin.cn/post/7281530284661948453" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-22 🏷 <code>three.js</code></p><h3 id="python-安装django" tabindex="-1">python-安装django <a class="header-anchor" href="#python-安装django" aria-label="Permalink to &quot;python-安装django&quot;">​</a></h3><blockquote><p>1.安装命令 查看是否安装成功 创建django项目 app概念 创建app 快速开始 注册app（setting.py） 编写url和视图函数关系 编写和视图函数 启动gjango项目python ...</p><p><a href="https://juejin.cn/post/7280775972323655732" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>40 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-20 🏷 <code>Python</code></p><h3 id="python实现前端项目打包自动化部署" tabindex="-1">python实现前端项目打包自动化部署 <a class="header-anchor" href="#python实现前端项目打包自动化部署" aria-label="Permalink to &quot;python实现前端项目打包自动化部署&quot;">​</a></h3><blockquote><p>需要安装paramiko 定义字典进行前端多环境的打包压缩连接服务器部署 获取用户输入,直到输入正确才执行，输入错误就继续让输入(让用户指定全部打包还是正式服或者是测试服打包) 循环执行对应的打包部署...</p><p><a href="https://juejin.cn/post/7280740005566562356" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>59 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-20 🏷 <code>Python</code></p><h3 id="_5-python连接mysql" tabindex="-1">5. python连接mysql <a class="header-anchor" href="#_5-python连接mysql" aria-label="Permalink to &quot;5. python连接mysql&quot;">​</a></h3><blockquote><p>创建sql报表 结果 查询数据库的所有数据 插入数据需要手动确认，autocommit=True可以自动提交 spark数据处理 RDD对象（弹性分布式数据集） 读取文件...</p><p><a href="https://juejin.cn/post/7279720181534408738" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>30 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-17 🏷 <code>Python</code></p><h3 id="列表滚动" tabindex="-1">列表滚动 <a class="header-anchor" href="#列表滚动" aria-label="Permalink to &quot;列表滚动&quot;">​</a></h3><blockquote><p>\`\`\` <code></code> <code></code> <code></code> <code></code> <code></code> <code></code> \`\`\`\`\`\` \`\`\`\`\`...</p><p><a href="https://juejin.cn/post/7279720181534392354" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-17 🏷 <code>前端</code></p><h3 id="_4-python-sql数据库" tabindex="-1">4.python sql数据库 <a class="header-anchor" href="#_4-python-sql数据库" aria-label="Permalink to &quot;4.python sql数据库&quot;">​</a></h3><blockquote><p>数据的插入、删除、更新 查询 根据条件查询数据的插入、删除、更新 查询 根据条件查询数据的插入、删除、更新 查询 根据条件查询数据的插入、删除、更新 查询 根据条件查询数据的插入、删除、更新 查询 根...</p><p><a href="https://juejin.cn/post/7278952595423281186" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>21 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-16 🏷 <code>Python</code></p><h3 id="_3-python对象封装、正则表达式" tabindex="-1">3.python对象封装、正则表达式 <a class="header-anchor" href="#_3-python对象封装、正则表达式" aria-label="Permalink to &quot;3.python对象封装、正则表达式&quot;">​</a></h3><blockquote><p>封装私有变量 __代表私有变量和方法，外界不支持使用，只有内部可以使用 继承 单继承 多继承，有共同的属性或方法，写在最前面的优先级高。 复写 父类名.属性或方法，方法里面记得写self，super(...</p><p><a href="https://juejin.cn/post/7278874518252453928" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>27 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-15 🏷 <code>Python</code></p><h3 id="_2-vscode使用和运行python" tabindex="-1">2.vscode使用和运行python <a class="header-anchor" href="#_2-vscode使用和运行python" aria-label="Permalink to &quot;2.vscode使用和运行python&quot;">​</a></h3><blockquote><p>最近在学习python，教程是安装pycharm，使用起来很不习惯（作为一个vscode的重度使用者），下面是在vscode安装插件运行python，很简单的两步 在插件扩展的地方搜索python 新...</p><p><a href="https://juejin.cn/post/7278244755825246245" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>70 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-13 🏷 <code>Python</code></p><h3 id="_1-python" tabindex="-1">1.python <a class="header-anchor" href="#_1-python" aria-label="Permalink to &quot;1.python&quot;">​</a></h3><blockquote><p>字符串格式化 %s 转成字符串，%d 整数，%f 浮点数 %5.2f 将11.345设置为 三个空格+11.35 快速格式化，但是不能控制精度...</p><p><a href="https://juejin.cn/post/7276324972783501372" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>42 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-08 🏷 <code>Python</code></p><h3 id="优雅封装echarts" tabindex="-1">优雅封装echarts <a class="header-anchor" href="#优雅封装echarts" aria-label="Permalink to &quot;优雅封装echarts&quot;">​</a></h3><blockquote><p>未封装之前，一个图表一个组件，看了里面的代码，除了data和options不一致，其他代码都是可以复用的，就想着去封装一下 这是封装之后的代码 看一下index.ts文件 使用的是函数根据data返回...</p><p><a href="https://juejin.cn/post/7275559201007386639" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>74 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-06 🏷 <code>前端</code></p><h3 id="vue3的全局变量" tabindex="-1">vue3的全局变量 <a class="header-anchor" href="#vue3的全局变量" aria-label="Permalink to &quot;vue3的全局变量&quot;">​</a></h3><blockquote><p>vue2.x挂载全局是使用Vue.prototype.$xxxx=xxx的形式来挂载，然后通过this.$xxx来获取挂载到全局的变量或者方法 在vue3.x这种方法显然是不行了，vue3中在setu...</p><p><a href="https://juejin.cn/post/7275150382253719615" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>251 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-09-05 🏷 <code>前端</code></p><h3 id="接口遍历生成md-最终导出zip" tabindex="-1">接口遍历生成md，最终导出zip <a class="header-anchor" href="#接口遍历生成md-最终导出zip" aria-label="Permalink to &quot;接口遍历生成md，最终导出zip&quot;">​</a></h3><blockquote><p>接口请求获取拼接导出的数组markdownFiles 导出的方法，使用第三方库jsZip，使用第三方库jsZip...</p><p><a href="https://juejin.cn/post/7273085511841972281" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>27 阅读 · 1 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-08-31 🏷 <code>前端</code></p><h3 id="js代码雨" tabindex="-1">js代码雨 <a class="header-anchor" href="#js代码雨" aria-label="Permalink to &quot;js代码雨&quot;">​</a></h3><blockquote><p>vue3实现代码雨， /* 右侧大云朵 */ box-shadow: 90px 0 0 30px ffffff;...</p><p><a href="https://juejin.cn/post/7271159003630813221" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-08-25 🏷 <code>前端</code></p><h3 id="scss实现随机气泡大小-left百分比位置" tabindex="-1">scss实现随机气泡大小，left百分比位置 <a class="header-anchor" href="#scss实现随机气泡大小-left百分比位置" aria-label="Permalink to &quot;scss实现随机气泡大小，left百分比位置&quot;">​</a></h3><blockquote><p>scss实现随机气泡大小，left百分比位置 气泡使用box-shadow: inset 0 0 8px fff;...</p><p><a href="https://juejin.cn/post/7270427148192530487" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>28 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-08-23 🏷 <code>前端</code></p><h3 id="vue3-ts-转盘抽奖" tabindex="-1">vue3+ts，转盘抽奖 <a class="header-anchor" href="#vue3-ts-转盘抽奖" aria-label="Permalink to &quot;vue3+ts，转盘抽奖&quot;">​</a></h3><blockquote><p>vue3+ts，转盘抽奖vue3+ts，转盘抽奖vue3+ts，转盘抽奖vue3+ts，转盘抽奖vue3+ts，转盘抽奖vue3+ts，转盘抽奖vue3+ts，转盘抽奖...</p><p><a href="https://juejin.cn/post/7270072543989006373" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>55 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-08-22 🏷 <code>前端</code></p><h3 id="实现mac的docker栏效果" tabindex="-1">实现mac的docker栏效果 <a class="header-anchor" href="#实现mac的docker栏效果" aria-label="Permalink to &quot;实现mac的docker栏效果&quot;">​</a></h3><blockquote><p>完整代码 原理就是监听鼠标的移入移除，给鼠标位置、鼠标的前后元素进行设置一个scale，以及添加动画过度...</p><p><a href="https://juejin.cn/post/7269981999020113957" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>97 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-08-22 🏷 <code>前端</code></p><h3 id="使用外站图片403" tabindex="-1">使用外站图片403 <a class="header-anchor" href="#使用外站图片403" aria-label="Permalink to &quot;使用外站图片403&quot;">​</a></h3><blockquote><p>在自己的小程序使用第三方的图片，之前没有开启防盗链，可以正常显示，但是后面这个网站开启了 解决方案： 如果是其他项目有 index.html,直接添加 一般来说，防盗链机制会判断图片请求的 Reque...</p><p><a href="https://juejin.cn/post/7261799437729693751" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>43 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-31 🏷 <code>前端</code></p><h3 id="elmessage多次弹窗问题" tabindex="-1">ElMessage多次弹窗问题 <a class="header-anchor" href="#elmessage多次弹窗问题" aria-label="Permalink to &quot;ElMessage多次弹窗问题&quot;">​</a></h3><blockquote><p>在封装请求拦截器时，使用ElMessage进行弹窗提示成功或失败，但是如果页面用到多个接口，这时就会导致页面出现很多弹窗，导致用户体验不好，有可能出现卡顿， 这时就需要进行一些判断，如果前面的ElMe...</p><p><a href="https://juejin.cn/post/7260311254022504508" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>166 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-27 🏷 <code>前端</code></p><h3 id="vite项目下启动serve文件下的node服务器和vite" tabindex="-1">vite项目下启动serve文件下的node服务器和vite <a class="header-anchor" href="#vite项目下启动serve文件下的node服务器和vite" aria-label="Permalink to &quot;vite项目下启动serve文件下的node服务器和vite&quot;">​</a></h3><blockquote><p>自己开发学习项目时，为了方便，不用开启多个shell启动前后端项目的命令，想到使用一个命令进行启动项目并且启动node服务，这里使用的是一个插件 npm-run-all 安装 page.json编写命...</p><p><a href="https://juejin.cn/post/7256715451145044025" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>297 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-17 🏷 <code>前端</code></p><h3 id="react-百度地图渲染多点标注和改变文本背景颜色" tabindex="-1">react 百度地图渲染多点标注和改变文本背景颜色 <a class="header-anchor" href="#react-百度地图渲染多点标注和改变文本背景颜色" aria-label="Permalink to &quot;react 百度地图渲染多点标注和改变文本背景颜色&quot;">​</a></h3><blockquote><p>其中多点标注使用map去渲染生成（在地图上的点，生成的形状，生成的文本） 添加辅助函数去渲染传进来的背景颜色 完整代码 使用...</p><p><a href="https://juejin.cn/post/7252992621437403194" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>105 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-07 🏷 <code>前端</code></p><h3 id="scss进行媒体查询做到响应式布局" tabindex="-1">scss进行媒体查询做到响应式布局 <a class="header-anchor" href="#scss进行媒体查询做到响应式布局" aria-label="Permalink to &quot;scss进行媒体查询做到响应式布局&quot;">​</a></h3><blockquote><p>scss进行媒体查询做到响应式布局scss进行媒体查询做到响应式布局scss进行媒体查询做到响应式布局scss进行媒体查询做到响应式布局scss进行媒体查询做到响应式布局...</p><p><a href="https://juejin.cn/post/7252897350380453948" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>53 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-07 🏷 <code>前端</code></p><h3 id="antd-二次封装table" tabindex="-1">antd 二次封装table <a class="header-anchor" href="#antd-二次封装table" aria-label="Permalink to &quot;antd 二次封装table&quot;">​</a></h3><blockquote><p>首先是table有多个按钮可以从外界传入，使用的是tsx的children进行插槽 关键代码 父组件使用 antd的数据源是key作为唯一的key，如果数据是id，可以将ttable指定为这样<code>&lt;Tab... </code><a href="https://juejin.cn/post/7251106409793798199" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>326 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-07-02 🏷 <code>前端</code></p><h3 id="antd二次封装select" tabindex="-1">antd二次封装select <a class="header-anchor" href="#antd二次封装select" aria-label="Permalink to &quot;antd二次封装select&quot;">​</a></h3><blockquote><p>二次封装的antd select组件，定义选中的是id还是name，...rest将其原有的select进行透传 使用方法...</p><p><a href="https://juejin.cn/post/7250756790241296444" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>203 阅读 · 0 点赞 · 0 评论 · 2 收藏</strong></p><p>📅 2023-07-02 🏷 <code>前端</code></p><h3 id="icon自定义字体图标-bug踩坑" tabindex="-1">icon自定义字体图标 bug踩坑 <a class="header-anchor" href="#icon自定义字体图标-bug踩坑" aria-label="Permalink to &quot;icon自定义字体图标 bug踩坑&quot;">​</a></h3><blockquote><p>开发时本地环境运行，icon正常显示，一打包就发现icon首次不显示，刷新一下就显示正常，路由跳转到其他页面再回来也不显示，一开始以为是webpack打包导致css丢失，控制台也报错 后面查看发现是自...</p><p><a href="https://juejin.cn/post/7244436362979557432" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>209 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-06-14 🏷 <code>Vue.js</code></p><h3 id="vue路由未登录跳转-登录后跳转回原链接" tabindex="-1">vue路由未登录跳转，登录后跳转回原链接 <a class="header-anchor" href="#vue路由未登录跳转-登录后跳转回原链接" aria-label="Permalink to &quot;vue路由未登录跳转，登录后跳转回原链接&quot;">​</a></h3><blockquote><p>在路由守卫这里做相关的逻辑 关键代码next({ path: &#39;/login&#39;, query: { redirect: to.fullPath } })，在跳转到login页面时将路径和参数存到地址栏...</p><p><a href="https://juejin.cn/post/7244066046683627579" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>176 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-06-13 🏷 <code>前端</code></p><h3 id="react18-新特性" tabindex="-1">react18 新特性 <a class="header-anchor" href="#react18-新特性" aria-label="Permalink to &quot;react18 新特性&quot;">​</a></h3><blockquote><p>1.render更加语义化 2.自动批量更新state（开发模式下关闭严格模式） promise、setTimeout、原生事件支持（监听click，滚动等），react17会触发两次，react18...</p><p><a href="https://juejin.cn/post/7243748398567669816" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>69 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-06-12 🏷 <code>React.js</code></p><h3 id="pinia的坑getactivepinia-was-called-with-no-active-pinia-did-you-forget-to-install" tabindex="-1">pinia的坑getActivePinia was called with no active Pinia. Did you forget to install <a class="header-anchor" href="#pinia的坑getactivepinia-was-called-with-no-active-pinia-did-you-forget-to-install" aria-label="Permalink to &quot;pinia的坑getActivePinia was called with no active Pinia. Did you forget to install&quot;">​</a></h3><blockquote><p>本地开发是没有问题的，但是一打包就提示这个报错 gpt的回答 显然不是这个原因引起的，因为之前的pinia也是可以使用的 查看了git提交的代码，发现自己封装的组件在import一个全局的方法，vue...</p><p><a href="https://juejin.cn/post/7242717749905932344" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>289 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-06-10 🏷 <code>前端</code></p><h3 id="nginx访问md文件在vue项目展示" tabindex="-1">nginx访问md文件在vue项目展示 <a class="header-anchor" href="#nginx访问md文件在vue项目展示" aria-label="Permalink to &quot;nginx访问md文件在vue项目展示&quot;">​</a></h3><blockquote><p>如果把md文件放到服务器上面，浏览器直接访问会直接下载，nginx配置md文件访问是md /help/images是配置图片路径 vue项目安装 npm install markdown-it --s...</p><p><a href="https://juejin.cn/post/7241821748210810937" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>113 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-06-07 🏷 <code>前端</code></p><h3 id="wacth的使用性能" tabindex="-1">wacth的使用性能 <a class="header-anchor" href="#wacth的使用性能" aria-label="Permalink to &quot;wacth的使用性能&quot;">​</a></h3><blockquote><p>孙祖件传值修改config中的某个key并更新config， 总结：因为在监听器中更新了 userPreference 对象，并触发了 userPreference 的 set 函数，从而又触发了 u...</p><p><a href="https://juejin.cn/post/7241424021127610423" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>14 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-06-06 🏷 <code>Vue.js</code></p><h3 id="手写vuex" tabindex="-1">手写vueX <a class="header-anchor" href="#手写vuex" aria-label="Permalink to &quot;手写vueX&quot;">​</a></h3><blockquote><p>1.main.js导入使用store vuex的使用方法，actions是异步 vuex/index.js 组件使用...</p><p><a href="https://juejin.cn/post/7238539643948367933" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>50 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-29 🏷 <code>前端</code></p><h3 id="webpack原理" tabindex="-1">webpack原理 <a class="header-anchor" href="#webpack原理" aria-label="Permalink to &quot;webpack原理&quot;">​</a></h3><blockquote><p>loader执行顺序从右到左，从下到上 1.同步loader 同步loader不能执行异步loader 2.异步loader 先执行异步的test2再执行test1 一、webpack-dev-ser...</p><p><a href="https://juejin.cn/post/7238148905095970876" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-28 🏷 <code>Webpack</code></p><h3 id="hitfit-pro-管理后台" tabindex="-1">HitFit Pro 管理后台 <a class="header-anchor" href="#hitfit-pro-管理后台" aria-label="Permalink to &quot;HitFit Pro 管理后台&quot;">​</a></h3><blockquote><p>使用的技术栈是vue2全家桶，使用element ui进行二次封装组件库， 比如el-select，el-dialog，el-table等二次封装，管理后台比较多页面这里只是把主要功能展示出来 首页可...</p><p><a href="https://juejin.cn/post/7237386183612825661" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>85 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-26 🏷 <code>前端</code></p><h3 id="vue原理-渡一" tabindex="-1">vue原理（渡一） <a class="header-anchor" href="#vue原理-渡一" aria-label="Permalink to &quot;vue原理（渡一）&quot;">​</a></h3><blockquote><p>数据响应式的本质就是数据变化时自动运行一些函数，遍历一个对象进行Object.defineProperty进行get和set依赖收集， 依赖收集是保存一个数组，在set的是遍历数组进行函数执行，new...</p><p><a href="https://juejin.cn/post/7237043816887369786" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>178 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-25 🏷 <code>前端</code></p><h3 id="css动态判断文字滚动" tabindex="-1">css动态判断文字滚动 <a class="header-anchor" href="#css动态判断文字滚动" aria-label="Permalink to &quot;css动态判断文字滚动&quot;">​</a></h3><blockquote><p>文字走马灯，手机的弹幕等等。 js可以动态的计算宽度，但js做动画需要定时器，很不方便。 其实就是里外容器对向滚动，滚动的值为里外容器宽度的差值，如果里容器与外容器等宽，那么差值就为0，视觉上是没有滚...</p><p><a href="https://juejin.cn/post/7237032198279938105" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>98 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-25 🏷 <code>前端</code></p><h3 id="浏览器渲染原理" tabindex="-1">浏览器渲染原理 <a class="header-anchor" href="#浏览器渲染原理" aria-label="Permalink to &quot;浏览器渲染原理&quot;">​</a></h3><blockquote><p>一、当浏览器的网络线程拿到html文档，会产生一个渲染任务，并将其传递给渲染主线程的消息队列 在事件循环机制下，渲染主线程取出消息队列中的渲染任务，开启渲染流程 1.解析html，完成dom树和css...</p><p><a href="https://juejin.cn/post/7236672410626588727" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>28 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-24 🏷 <code>面试</code></p><h3 id="js实现删除多行不同的color" tabindex="-1">js实现删除多行不同的color <a class="header-anchor" href="#js实现删除多行不同的color" aria-label="Permalink to &quot;js实现删除多行不同的color&quot;">​</a></h3><blockquote><p>在实际工作时有一个需求是导入多个svg转成字体图标，然后进行动态改色 由于导入时，svg带有颜色，生成的icon有默认颜色， 解决的方案就是提高css的权重，但是多人开发时可能会导致其他人不清楚这个方...</p><p><a href="https://juejin.cn/post/7236213691132280890" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>40 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-23 🏷 <code>前端</code></p><h3 id="_20-react-登录组件" tabindex="-1">20.react --- 登录组件 <a class="header-anchor" href="#_20-react-登录组件" aria-label="Permalink to &quot;20.react --- 登录组件&quot;">​</a></h3><blockquote><p>1.高阶组件去绑定表单元素，原生的表单元素一个个去绑定表单元素比较繁琐 2.yup实现表单元素校验 2.yup实现表单元素校验...</p><p><a href="https://juejin.cn/post/7236010202360086584" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-22 🏷 <code>前端</code> <code>React.js</code></p><h3 id="_19-react动画-react-spring" tabindex="-1">19.react动画---react-spring <a class="header-anchor" href="#_19-react动画-react-spring" aria-label="Permalink to &quot;19.react动画---react-spring&quot;">​</a></h3><blockquote><p>1.安装 yarn add react-spring 2.使用react-spring,组件切换时有动画过度，如果组件被销毁后没有动画，必须保证组件一直存在 这里如果有遮罩层会导致页面无法点击，所以在...</p><p><a href="https://juejin.cn/post/7235547967112265765" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>95 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-21 🏷 <code>React.js</code></p><h3 id="_18-react-infiniteloader、windowscroller、autosizer高阶组件" tabindex="-1">18.react --- InfiniteLoader、WindowScroller、AutoSizer高阶组件 <a class="header-anchor" href="#_18-react-infiniteloader、windowscroller、autosizer高阶组件" aria-label="Permalink to &quot;18.react --- InfiniteLoader、WindowScroller、AutoSizer高阶组件&quot;">​</a></h3><blockquote><p>InfiniteLoader用户滚动时加载更多数据 WindowScroller将高度设置为视口高度，同步滚动条 AutoSizer虚拟长列表，将视口的数据转换为响应式数据，优化加载 Infinite...</p><p><a href="https://juejin.cn/post/7235547967112134693" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>192 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-21 🏷 <code>React.js</code></p><h3 id="scroll-view无法获取ref" tabindex="-1">scroll-view无法获取ref <a class="header-anchor" href="#scroll-view无法获取ref" aria-label="Permalink to &quot;scroll-view无法获取ref&quot;">​</a></h3><blockquote><p>scroll-view无法获取ref，想点击回到顶部时，无法通过this.$refs这种方式回到顶部 查看官方文档的解决方案，动态传入...</p><p><a href="https://juejin.cn/post/7235274652728279101" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>179 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-21 🏷 <code>前端</code></p><h3 id="_17-react相同组件切换时-重新创建组件" tabindex="-1">17.react相同组件切换时，重新创建组件 <a class="header-anchor" href="#_17-react相同组件切换时-重新创建组件" aria-label="Permalink to &quot;17.react相同组件切换时，重新创建组件&quot;">​</a></h3><blockquote><p>react点击相同组件切换时，数据更新了，但是选中的值没有回显，如果关闭组件在打开就可以正确渲染，解决的方案就是需要重新创建组件，渲染组件 来回点击时，数据回显组件的默认值不限，没有回显父组件传给子组...</p><p><a href="https://juejin.cn/post/7235163148613664824" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>87 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-20 🏷 <code>React.js</code></p><h3 id="docker安装mysql-windows重启后数据丢失" tabindex="-1">docker安装mysql，windows重启后数据丢失 <a class="header-anchor" href="#docker安装mysql-windows重启后数据丢失" aria-label="Permalink to &quot;docker安装mysql，windows重启后数据丢失&quot;">​</a></h3><blockquote><p>docker去安装mysql对于开发来说很好用，免去很多的配置，短短几行代码即可安装好mysql，但是对开发者进行开发时要对docker有一定的了解， 分享一个开发时遇到的问题，windows安装好d...</p><p><a href="https://juejin.cn/post/7235117005737885753" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>351 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-20 🏷 <code>Docker</code></p><h3 id="微信小程序分享功能" tabindex="-1">微信小程序分享功能 <a class="header-anchor" href="#微信小程序分享功能" aria-label="Permalink to &quot;微信小程序分享功能&quot;">​</a></h3><blockquote><p>button类型 open-type=&quot;share&quot; 效果图 分享插件，使用ref调用子方法进行图片保存本地 效果图...</p><p><a href="https://juejin.cn/post/7235117005736968249" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>132 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-20 🏷 <code>前端</code></p><h3 id="低代码平台组件动态icon展示需求" tabindex="-1">低代码平台组件动态icon展示需求 <a class="header-anchor" href="#低代码平台组件动态icon展示需求" aria-label="Permalink to &quot;低代码平台组件动态icon展示需求&quot;">​</a></h3><blockquote><p>需求是，一个组件由list组成，list里面的对象代表一个模块，一个模块里面又有icon这样的一个list进行icon展示，当list为[]时不展示icon，不为空是根据icon展示对应的icon，组...</p><p><a href="https://juejin.cn/post/7234787766151233595" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>132 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-19 🏷 <code>前端</code></p><h3 id="_16-react-条件筛选组件封装" tabindex="-1">16.react---条件筛选组件封装 <a class="header-anchor" href="#_16-react-条件筛选组件封装" aria-label="Permalink to &quot;16.react---条件筛选组件封装&quot;">​</a></h3><blockquote><p>FilterTitle组件 1.使用map遍历展示条件筛选的title，然后通过父组件传值false、true来展示高亮效果 2.子组件调用父组件的onClick传type给父组件 FilterPic...</p><p><a href="https://juejin.cn/post/7234468374180429880" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>253 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-18 🏷 <code>React.js</code></p><h3 id="_15-react-封装头部搜索组件" tabindex="-1">15.react---封装头部搜索组件 <a class="header-anchor" href="#_15-react-封装头部搜索组件" aria-label="Permalink to &quot;15.react---封装头部搜索组件&quot;">​</a></h3><blockquote><p>1.封装组件传参className，合并以空格隔开 2.react的样式覆盖 完整代码，高阶组件withRouter 实现效果...</p><p><a href="https://juejin.cn/post/7234468374179725368" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>61 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-18 🏷 <code>前端</code> <code>React.js</code></p><h3 id="_14-react百度地图的使用" tabindex="-1">14.react百度地图的使用 <a class="header-anchor" href="#_14-react百度地图的使用" aria-label="Permalink to &quot;14.react百度地图的使用&quot;">​</a></h3><blockquote><p>1.脚手架使用时会提示undefined，可以在react组件外面定义一个变量 const BMapGL = window.BMapGL 2.城市反向解析，并调整视野，获取比例尺和缩放空间 3.调整控...</p><p><a href="https://juejin.cn/post/7233762589719789623" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>101 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-16 🏷 <code>React.js</code></p><h3 id="_13-react组件封装-header组件" tabindex="-1">13.react组件封装---header组件 <a class="header-anchor" href="#_13-react组件封装-header组件" aria-label="Permalink to &quot;13.react组件封装---header组件&quot;">​</a></h3><blockquote><p>react的组件封装 1.组件间的类名冲突，可以使用css in js的方案，创建.module.css,vue的scoped是一样的作用 2.使用children来传值，类似vue的slot 3.r...</p><p><a href="https://juejin.cn/post/7233720284708372539" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>72 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-16 🏷 <code>前端</code> <code>React.js</code></p><h3 id="_12-react实现城市列表" tabindex="-1">12.react实现城市列表 <a class="header-anchor" href="#_12-react实现城市列表" aria-label="Permalink to &quot;12.react实现城市列表&quot;">​</a></h3><blockquote><p>实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果实现效果...</p><p><a href="https://juejin.cn/post/7233031907294789693" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>145 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-14 🏷 <code>React.js</code></p><h3 id="_11-react使用百度地图进行定位" tabindex="-1">11.react使用百度地图进行定位 <a class="header-anchor" href="#_11-react使用百度地图进行定位" aria-label="Permalink to &quot;11.react使用百度地图进行定位&quot;">​</a></h3><blockquote><p>注册百度账号，在控制台注册应用，记得使用浏览器端 引入百度地图 定位城市示例 刷新页面进行验证是否获取到定位...</p><p><a href="https://juejin.cn/post/7232299550382358584" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>62 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-12 🏷 <code>前端</code> <code>React.js</code></p><h3 id="优雅新增字段在前端展示-提交后端时删除新增的key" tabindex="-1">优雅新增字段在前端展示，提交后端时删除新增的key <a class="header-anchor" href="#优雅新增字段在前端展示-提交后端时删除新增的key" aria-label="Permalink to &quot;优雅新增字段在前端展示，提交后端时删除新增的key&quot;">​</a></h3><blockquote><p>实际开发时前端需要name，com，previewUrl去展示，但是不需要提交给后台这些字段，主要是图片字段会转成base64还有com是动态组件，发送到后端会导致存储过长 解决方案： 1.在接口获取...</p><p><a href="https://juejin.cn/post/7232239024105734203" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>28 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-12 🏷 <code>前端</code></p><h3 id="_10-react路由切换-tabbar没有实现高亮" tabindex="-1">10.react路由切换，tabbar没有实现高亮 <a class="header-anchor" href="#_10-react路由切换-tabbar没有实现高亮" aria-label="Permalink to &quot;10.react路由切换，tabbar没有实现高亮&quot;">​</a></h3><blockquote><div class="language-// vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">//</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7231172059102478396)</span></span></code></pre></div></blockquote><p>📊 <strong>90 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-09 🏷 <code>前端</code></p><h3 id="_9-react封装axios" tabindex="-1">9.react封装axios <a class="header-anchor" href="#_9-react封装axios" aria-label="Permalink to &quot;9.react封装axios&quot;">​</a></h3><blockquote><p>在utils文件加下新建http.js 在src文件下新建api文件新建home.js,.........</p><p><a href="https://juejin.cn/post/7230810119121797181" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>106 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-08 🏷 <code>React.js</code></p><h3 id="_8-react-antd-mobile项目实战-创建tabbar" tabindex="-1">8.react+antd mobile项目实战---创建tabbar <a class="header-anchor" href="#_8-react-antd-mobile项目实战-创建tabbar" aria-label="Permalink to &quot;8.react+antd mobile项目实战---创建tabbar&quot;">​</a></h3><blockquote><p>1.创建项目，安装antd mobil 使用的是Tabbar 全部代码，1.创建项目，安装antd mobil 使用的是Tabbar 全部代码...</p><p><a href="https://juejin.cn/post/7230796030610423863" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>122 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-08 🏷 <code>React.js</code></p><h3 id="docker部署node项目-打包成镜像" tabindex="-1">docker部署node项目---打包成镜像 <a class="header-anchor" href="#docker部署node项目-打包成镜像" aria-label="Permalink to &quot;docker部署node项目---打包成镜像&quot;">​</a></h3><blockquote><p>1.首先你需要创建一个node项目（这里以koa项目为例） 2.然后在项目的根目录创建一个Dockerfile文件 3.编写Dockerfile文件 4.打包镜像 5.运行镜像 6.docker ps...</p><p><a href="https://juejin.cn/post/7230242557350903866" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1596 阅读 · 0 点赞 · 0 评论 · 4 收藏</strong></p><p>📅 2023-05-07 🏷 <code>Docker</code></p><h3 id="_7-高阶组件-hoc" tabindex="-1">7.高阶组件---HOC <a class="header-anchor" href="#_7-高阶组件-hoc" aria-label="Permalink to &quot;7.高阶组件---HOC&quot;">​</a></h3><blockquote><p>高阶组件HOC使用一个函数包裹组件，将逻辑写在函数内部 使用，将逻辑写在函数内部 使用，将逻辑写在函数内部 使用...</p><p><a href="https://juejin.cn/post/7228917388385566778" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-05-03 🏷 <code>React.js</code></p><h3 id="_6-高阶组件-render-props模式" tabindex="-1">6.高阶组件---render props模式 <a class="header-anchor" href="#_6-高阶组件-render-props模式" aria-label="Permalink to &quot;6.高阶组件---render props模式&quot;">​</a></h3><blockquote><p>![image.png](<a href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0443ae2605bb4292ac40d032a5525b27~tplv" target="_blank" rel="noreferrer">https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0443ae2605bb4292ac40d032a5525b27~tplv</a>...</p><p><a href="https://juejin.cn/post/7228593475930980408" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>26 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-02 🏷 <code>React.js</code></p><h3 id="_5-组件生命周期" tabindex="-1">5.组件生命周期 <a class="header-anchor" href="#_5-组件生命周期" aria-label="Permalink to &quot;5.组件生命周期&quot;">​</a></h3><blockquote><p>一、创建阶段 1.constructor： 初始化state，为事件处理绑定this 2.reder：渲染ui，不能调用setState,会导致递归更新报错 3.componentDidMount：获...</p><p><a href="https://juejin.cn/post/7228593797444780088" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>23 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-02 🏷 <code>React.js</code></p><h3 id="_4-children属性" tabindex="-1">4.children属性 <a class="header-anchor" href="#_4-children属性" aria-label="Permalink to &quot;4.children属性&quot;">​</a></h3><blockquote><p>children属性和vue的slot相似，children属性和vue的slot相似，children属性和vue的slot相似children属性和vue的slot相似...</p><p><a href="https://juejin.cn/post/7228514567898087484" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-02 🏷 <code>React.js</code></p><h3 id="_3-context-跨组件传值" tabindex="-1">3.context 跨组件传值 <a class="header-anchor" href="#_3-context-跨组件传值" aria-label="Permalink to &quot;3.context 跨组件传值&quot;">​</a></h3><blockquote><p>context传值相当于vue的provide和inject 使用时要将其嵌套在外层，Provider和Consumer...</p><p><a href="https://juejin.cn/post/7228510644831322167" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-02 🏷 <code>React.js</code></p><h3 id="_2-react-props传值" tabindex="-1">2.react props传值 <a class="header-anchor" href="#_2-react-props传值" aria-label="Permalink to &quot;2.react props传值&quot;">​</a></h3><blockquote><p>1.props传值（跟vue一样，只是写法不太一样） 注意：直接通过create-react-app模式创建的，默认就是StrictMode下。StrticMode默认会执行两次render，来检测你...</p><p><a href="https://juejin.cn/post/7228232918016278583" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>42 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-01 🏷 <code>React.js</code></p><h3 id="_1-react的数据渲染-评论列表demo" tabindex="-1">1.react的数据渲染----评论列表demo <a class="header-anchor" href="#_1-react的数据渲染-评论列表demo" aria-label="Permalink to &quot;1.react的数据渲染----评论列表demo&quot;">​</a></h3><blockquote><p>vue和react的对比 1.v-if在react里面使用三元表达式 2.v-for在react里面使用map...</p><p><a href="https://juejin.cn/post/7228225805310263354" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-05-01 🏷 <code>React.js</code></p><h3 id="_27-map-obj互转" tabindex="-1">27.map，obj互转 <a class="header-anchor" href="#_27-map-obj互转" aria-label="Permalink to &quot;27.map，obj互转&quot;">​</a></h3><blockquote><div class="language-var vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">var</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line highlighted"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7220782242254782523)</span></span></code></pre></div></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-11 🏷 <code>前端</code></p><h3 id="_25-闭包" tabindex="-1">25.闭包 <a class="header-anchor" href="#_25-闭包" aria-label="Permalink to &quot;25.闭包&quot;">​</a></h3><blockquote><p>局部变量无法共享和长久保存，全局变量可能会造成全局污染，希望有一种机制可以长久保存变量，又不会造成全...</p><p><a href="https://juejin.cn/post/7218915344131719223" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-06 🏷 <code>前端</code></p><h3 id="_24-作用域" tabindex="-1">24.作用域 <a class="header-anchor" href="#_24-作用域" aria-label="Permalink to &quot;24.作用域&quot;">​</a></h3><blockquote><div class="language-// vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">//</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7218459472918036538)</span></span></code></pre></div></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-05 🏷 <code>前端</code></p><h3 id="_23-this指向" tabindex="-1">23.this指向 <a class="header-anchor" href="#_23-this指向" aria-label="Permalink to &quot;23.this指向&quot;">​</a></h3><blockquote><p>this的指向问题，没有调用者，默认指向全局window，严格模式下是undefined 谁调用就指向...</p><p><a href="https://juejin.cn/post/7218148909751238712" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-04 🏷 <code>前端</code></p><h3 id="_22-谈谈vuex的理解" tabindex="-1">22.谈谈vueX的理解 <a class="header-anchor" href="#_22-谈谈vuex的理解" aria-label="Permalink to &quot;22.谈谈vueX的理解&quot;">​</a></h3><blockquote><p>概念 Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式， 采用集中式存储管理应用的所有组件的状态，解决多组件数据通信。 状态修改 组件中commit-&gt;mutation-&gt;修改状态 组件...</p><p><a href="https://juejin.cn/post/7217801491189219389" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>57 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-03 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_21-vue钩子函数" tabindex="-1">21.vue钩子函数 <a class="header-anchor" href="#_21-vue钩子函数" aria-label="Permalink to &quot;21.vue钩子函数&quot;">​</a></h3><blockquote><p>一、全局钩子（2个） 每次跳转路由时都会执行这个钩子函数，由router调用 1、beforeEach(to,from,next) 页面加载之前执行，有三个参数 to：到哪个路由去，from：从哪个路...</p><p><a href="https://juejin.cn/post/7216968724938391609" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>39 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-01 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="根据el-table的宽高导出excel表格" tabindex="-1">根据el-table的宽高导出excel表格 <a class="header-anchor" href="#根据el-table的宽高导出excel表格" aria-label="Permalink to &quot;根据el-table的宽高导出excel表格&quot;">​</a></h3><blockquote><p>根据el-table的宽高导出excel表格，根据el-table的宽高导出excel表格，根据el-table的宽高导出excel表格，...</p><p><a href="https://juejin.cn/post/7216942649069027385" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>71 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-04-01 🏷 <code>前端</code></p><h3 id="_20-vue的性能优化" tabindex="-1">20.vue的性能优化 <a class="header-anchor" href="#_20-vue的性能优化" aria-label="Permalink to &quot;20.vue的性能优化&quot;">​</a></h3><blockquote><p>数据层级不宜过深，合理设置响应式数据 通过Object.freeze()方法冻结不需要响应式的数据 使用数据时缓存值的结果，不频繁取值 v-for合理设置key，尽量不使用index v-show和v...</p><p><a href="https://juejin.cn/post/7216679822097760315" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>50 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-31 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="两个数组合并-相同id合并属性-不同id-push" tabindex="-1">两个数组合并，相同id合并属性，不同id push <a class="header-anchor" href="#两个数组合并-相同id合并属性-不同id-push" aria-label="Permalink to &quot;两个数组合并，相同id合并属性，不同id push&quot;">​</a></h3><blockquote><p>合并数组，相同项合并属性，不同push \`\`\` let arr=[{id:1,name:&#39;dylan&#39;},{id:2,name:&#39;kebi&#39;}] let arr1=[{id:1,position:&#39;c...</p><p><a href="https://juejin.cn/post/7216559027513475127" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>189 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-31 🏷 <code>前端</code></p><h3 id="_19-自定义指令的应用场景" tabindex="-1">19.自定义指令的应用场景 <a class="header-anchor" href="#_19-自定义指令的应用场景" aria-label="Permalink to &quot;19.自定义指令的应用场景&quot;">​</a></h3><blockquote><p>概念 Vue除了提供了默认内置的指令外，还允许开发人员根据实际情况自定义指令，它的作用价值在于，在某些场景下需要对普通DOM元素进行操作的逻辑进行复用。 生命周期 一个指令定义对象可以提供如下几个钩子...</p><p><a href="https://juejin.cn/post/7216316745525723191" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>41 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-30 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_19-谈谈你对nexttick的理解" tabindex="-1">19.谈谈你对nextTick的理解 <a class="header-anchor" href="#_19-谈谈你对nexttick的理解" aria-label="Permalink to &quot;19.谈谈你对nextTick的理解&quot;">​</a></h3><blockquote><p>概念 在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。 vue的数据是同步的，视图更新是异步的，如果数据有变化一百次视图跟着更新一百次，性能消耗比较...</p><p><a href="https://juejin.cn/post/7215967109171445816" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>43 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-29 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_18-vue的异步组件" tabindex="-1">18.vue的异步组件 <a class="header-anchor" href="#_18-vue的异步组件" aria-label="Permalink to &quot;18.vue的异步组件&quot;">​</a></h3><blockquote><p>异步组件的特点： Vue 只有在这个组件需要被渲染的时候才会从服务器端请求组件的相关js，且会把结果缓存起来供未来重渲染。 异步组件的好处： 提高性能。在大型应用中，我们可以将应用分割成小一些的代码块...</p><p><a href="https://juejin.cn/post/7215523663218147386" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-28 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_17-v-model和-sync" tabindex="-1">17.v-model和.sync <a class="header-anchor" href="#_17-v-model和-sync" aria-label="Permalink to &quot;17.v-model和.sync&quot;">​</a></h3><blockquote><p>v-model本质上是一个语法糖,在大部分情况下，** v-model=&quot;foo&quot; 等价于 :value=&quot;foo&quot; 加上 @input=&quot;foo = $event&quot;；** 原生的input的@inp...</p><p><a href="https://juejin.cn/post/7215188852851376184" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-27 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_16-vue-mixin" tabindex="-1">16.vue.mixin <a class="header-anchor" href="#_16-vue-mixin" aria-label="Permalink to &quot;16.vue.mixin&quot;">​</a></h3><blockquote><p>概念 mixin可以用来扩展组件，将公共逻辑进行抽离，在需要该逻辑的组件进行混入，采用策略模式****针对不同的属性进行合并，如果混入的数据和本身组件的数据冲突，采用“就近原则”，以组件的数据为准 混...</p><p><a href="https://juejin.cn/post/7214726637786333240" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>41 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-26 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_15-v-once" tabindex="-1">15.v-once <a class="header-anchor" href="#_15-v-once" aria-label="Permalink to &quot;15.v-once&quot;">​</a></h3><blockquote><p>概念 v-once是vue中的内置指令，只渲染元素和组件一次，随后的重新渲染，元素/组件及其所有的子节点都视为静态内容（其实就是缓存数据）跳过更新，这可以用于优化性能 使用场景 单个元素 有子元素 组...</p><p><a href="https://juejin.cn/post/7214435063180984375" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>64 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-25 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_14-函数式组件和过滤器" tabindex="-1">14.函数式组件和过滤器 <a class="header-anchor" href="#_14-函数式组件和过滤器" aria-label="Permalink to &quot;14.函数式组件和过滤器&quot;">​</a></h3><blockquote><p>函数式组件优势 无状态、无生命周期、无this，但是性能高，正常的组件是继承vue的一个类，函数式组件就是一个普通函数，没有new的过程，在vue3所有的组件都没有new，所以性能上没有优势。 过滤器...</p><p><a href="https://juejin.cn/post/7214036479819497509" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>29 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-24 🏷 <code>Vue.js</code></p><h3 id="vuecropper设置最大宽高的坑" tabindex="-1">vueCropper设置最大宽高的坑 <a class="header-anchor" href="#vuecropper设置最大宽高的坑" aria-label="Permalink to &quot;vueCropper设置最大宽高的坑&quot;">​</a></h3><blockquote><p>vueCropper踩过的坑，公司业务需求是按照指定尺寸裁剪，原本想着截出来在用canvas放大，后面发现有enlarge这个属性， 一开始想着设置5比较好计算，后面有一个尺寸是需要2788高，发现只...</p><p><a href="https://juejin.cn/post/7214036479819268133" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>505 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-24 🏷 <code>Vue.js</code></p><h3 id="_13-vue-extends方法的作用" tabindex="-1">13.Vue.extends方法的作用？ <a class="header-anchor" href="#_13-vue-extends方法的作用" aria-label="Permalink to &quot;13.Vue.extends方法的作用？&quot;">​</a></h3><blockquote><p>Vue.extends(options) 使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象 data 选项是特例，需要注意 - 在 Vue.extend() 中它必须是函数 这...</p><p><a href="https://juejin.cn/post/7213665579701485625" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>115 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-23 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="_12-vue-use是干什么的-重点" tabindex="-1">12.vue.use是干什么的（重点） <a class="header-anchor" href="#_12-vue-use是干什么的-重点" aria-label="Permalink to &quot;12.vue.use是干什么的（重点）&quot;">​</a></h3><blockquote><p>概念 插件的作用：插件通常用来为Vue添加全局功能，插件的功能没有严格的限制，一般有以下几种： 添加全局方法或property,如：vue-custom-element 添加全局资源：指令、过滤器、过...</p><p><a href="https://juejin.cn/post/7212925983966871609" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>35 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-21 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="vue里面的key的作用" tabindex="-1">vue里面的key的作用 <a class="header-anchor" href="#vue里面的key的作用" aria-label="Permalink to &quot;vue里面的key的作用&quot;">​</a></h3><blockquote><p>概念 key的特殊attribute，主要用在vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes，如果不使用key，vue会使用一种最大限度减少动态元素，并且尽可能尝试的修改、复用相同类型...</p><p><a href="https://juejin.cn/post/7212603829571878967" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>25 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-20 🏷 <code>前端</code></p><h3 id="_11-vue的diff算法原理" tabindex="-1">11.vue的diff算法原理 <a class="header-anchor" href="#_11-vue的diff算法原理" aria-label="Permalink to &quot;11.vue的diff算法原理&quot;">​</a></h3><blockquote><p>概念 vue基于虚拟dom做更新，核心是比较两个节点的差异，平级比较不考虑跨级比较，内部使用深度递归和双指针的方式进行比较 流程 1.先比较是否是相同节点key tag 2.相同节点比较属性，并复用老...</p><p><a href="https://juejin.cn/post/7212101192746811448" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-19 🏷 <code>前端</code></p><h3 id="_10-new-vue过程中做了什么" tabindex="-1">10.new Vue过程中做了什么 <a class="header-anchor" href="#_10-new-vue过程中做了什么" aria-label="Permalink to &quot;10.new Vue过程中做了什么&quot;">​</a></h3><blockquote><p>内部会初始化组件绑定事件，初始化组件的父子关系$parent $children $root 初始化响应式数据data、computed、props、watch、method，同时也初始化了provi...</p><p><a href="https://juejin.cn/post/7211437215336054844" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>21 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-17 🏷 <code>前端</code></p><h3 id="_9-watch和watcheffect的区别" tabindex="-1">9.watch和watchEffect的区别 <a class="header-anchor" href="#_9-watch和watcheffect的区别" aria-label="Permalink to &quot;9.watch和watchEffect的区别&quot;">​</a></h3><blockquote><p>watch监测一个或多个数据源，并在数据源发生变化时调用一个回调函数 watchEffect立即执行函数，被动地追踪依赖，当依赖变化时调用函数 两者之间区别不大，watch是数据变了，允许用户可以执行...</p><p><a href="https://juejin.cn/post/7211439925144731706" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>49 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-17 🏷 <code>前端</code></p><h3 id="vuedraggable拖拽删除实现" tabindex="-1">vuedraggable拖拽删除实现 <a class="header-anchor" href="#vuedraggable拖拽删除实现" aria-label="Permalink to &quot;vuedraggable拖拽删除实现&quot;">​</a></h3><blockquote><p>vuedraggable做组件化拖拽实现了排序，但是想实现拖拽到某一个位置进行删除， 看了官方文档没有相关的demo 简单实现的demo 看了一个demo是两个vuedraggable组件可以进行拖拽...</p><p><a href="https://juejin.cn/post/7210644884604354619" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>536 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-15 🏷 <code>Vue.js</code></p><h3 id="_8-computed和watch的区别" tabindex="-1">8.computed和watch的区别 <a class="header-anchor" href="#_8-computed和watch的区别" aria-label="Permalink to &quot;8.computed和watch的区别&quot;">​</a></h3><blockquote><p>vue2有三种watch（渲染watch，计算属性watch（computed），用户watch（也就是watch）） vue3有三种effect（渲染effect，计算属性effect（comput...</p><p><a href="https://juejin.cn/post/7210333299041534011" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-14 🏷 <code>Vue.js</code></p><h3 id="_7-vue中的v-if和v-show怎么理解" tabindex="-1">7.vue中的v-if和v-show怎么理解 <a class="header-anchor" href="#_7-vue中的v-if和v-show怎么理解" aria-label="Permalink to &quot;7.vue中的v-if和v-show怎么理解&quot;">​</a></h3><blockquote><p>基本概念 v-if，如果条件不成立就不会渲染当前指令所在的节点的dom元素（三元表达式） v-show只是切换当前dom的显示和隐藏display:none display opacity visiv...</p><p><a href="https://juejin.cn/post/7209990164847935544" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>118 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-13 🏷 <code>Vue.js</code></p><h3 id="_6-vue-set是怎么实现的" tabindex="-1">6.vue.set是怎么实现的 <a class="header-anchor" href="#_6-vue-set是怎么实现的" aria-label="Permalink to &quot;6.vue.set是怎么实现的&quot;">​</a></h3><blockquote><p>有五种情况 1.target未定义或者是基础类型就抛出警告 2.判断是否为数组，并判断key是不是有效索引，将数组的.length属性设置为最大值，调用数组的splice方法，将修改的数据变为响应式 ...</p><p><a href="https://juejin.cn/post/7209964630159851575" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>55 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-13 🏷 <code>前端</code></p><h3 id="el-upload-new-formdata上传文件" tabindex="-1">el-upload new FormData上传文件 <a class="header-anchor" href="#el-upload-new-formdata上传文件" aria-label="Permalink to &quot;el-upload new FormData上传文件&quot;">​</a></h3><blockquote><p>el-upload可以自定义上传方式，这种方法很少用，一般都是直接action直接上传，但是实际工作还是会有要求加密之类的，自己封装好的axios有加密，上传再封装一个是没有必要的，所以可以使用new...</p><p><a href="https://juejin.cn/post/7209939789805273149" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>475 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-13 🏷 <code>Element</code></p><h3 id="在线练习typescript" tabindex="-1">在线练习typeScript <a class="header-anchor" href="#在线练习typescript" aria-label="Permalink to &quot;在线练习typeScript&quot;">​</a></h3><blockquote><p>网站 typescript-exercises 一共有16题 1、构建一个User类使其不报错 2、构建一个Person类 将 Person 定义为 Admin 和 User 的联合类型 3、自动推断...</p><p><a href="https://juejin.cn/post/7208817904560947261" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1290 阅读 · 2 点赞 · 0 评论 · 3 收藏</strong></p><p>📅 2023-03-10 🏷 <code>TypeScript</code></p><h3 id="pinia使用" tabindex="-1">pinia使用 <a class="header-anchor" href="#pinia使用" aria-label="Permalink to &quot;pinia使用&quot;">​</a></h3><blockquote><p>安装pinia 安装数据持久化 mian.ts导入 分模块 默认的pinia数据持久化的设置和按需设置 页面使用...</p><p><a href="https://juejin.cn/post/7208736503521509435" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>65 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-10 🏷 <code>Vue.js</code></p><h3 id="element-plus-el-date-picker无法支持时间戳" tabindex="-1">element Plus el-date-picker无法支持时间戳 <a class="header-anchor" href="#element-plus-el-date-picker无法支持时间戳" aria-label="Permalink to &quot;element Plus el-date-picker无法支持时间戳&quot;">​</a></h3><blockquote><p>后端要求数据要时间戳，如果使用函数封装要考虑拿到数据转成日期格式回显，选择之后要转成时间戳提交，写成两个函数也可以，就是可能后期维护有点麻烦，所以我这里考虑使用computed的get和set。 el...</p><p><a href="https://juejin.cn/post/7208440329653141563" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>537 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-09 🏷 <code>前端</code></p><h3 id="vue3一款的markdown编辑器-md-editor-v3" tabindex="-1">vue3一款的markdown编辑器：md-editor-v3 <a class="header-anchor" href="#vue3一款的markdown编辑器-md-editor-v3" aria-label="Permalink to &quot;vue3一款的markdown编辑器：md-editor-v3&quot;">​</a></h3><blockquote><p>今天想要开发一个页面支持markdown编辑器， 使用的是md-editor-v3 作者的使用说明有点不是很清楚，callback回显有问题，想二次封装，后续多个页面可以使用 子组件使用的是props...</p><p><a href="https://juejin.cn/post/7208443531365646391" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1089 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-09 🏷 <code>Vue.js</code></p><h3 id="_5-谈谈对响应式数据的理解" tabindex="-1">5.谈谈对响应式数据的理解？ <a class="header-anchor" href="#_5-谈谈对响应式数据的理解" aria-label="Permalink to &quot;5.谈谈对响应式数据的理解？&quot;">​</a></h3><blockquote><p>vue2数组和对象类型的值变化如何劫持到 对象内部的defineReactive方法，使用Object.defineProperty将属性进行劫持，重写getter和setter 数组则是通过重写数组...</p><p><a href="https://juejin.cn/post/7207783106970026045" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>61 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-07 🏷 <code>Vue.js</code></p><h3 id="_922-按奇偶排序数组-ii" tabindex="-1">[922] 按奇偶排序数组 II <a class="header-anchor" href="#_922-按奇偶排序数组-ii" aria-label="Permalink to &quot;[922] 按奇偶排序数组 II&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7207730270015176759)</span></span></code></pre></div></blockquote><p>📊 <strong>35 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-07 🏷 <code>算法</code></p><h3 id="excel导出-数组数据处理" tabindex="-1">excel导出--数组数据处理 <a class="header-anchor" href="#excel导出-数组数据处理" aria-label="Permalink to &quot;excel导出--数组数据处理&quot;">​</a></h3><blockquote><p>一个数组里面找到相同的name，并将其langId对应的code作为key，content作为value，返回新的数组 完整的demo代码...</p><p><a href="https://juejin.cn/post/7207697872707649592" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>314 阅读 · 2 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-07 🏷 <code>前端</code></p><h3 id="_4-vue组件化的理解" tabindex="-1">4.vue组件化的理解 <a class="header-anchor" href="#_4-vue组件化的理解" aria-label="Permalink to &quot;4.vue组件化的理解&quot;">​</a></h3><blockquote><p>组件化是对我们的业务逻辑的封装 早期的组件化是webComponent，浏览器原生，没有发展起来是因为兼容性不好，其核心是模板、属性、事件、插槽、生命周期 好处 高内聚、可重用、可组合 组件化开发能大...</p><p><a href="https://juejin.cn/post/7207374216005107772" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1130 阅读 · 1 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-06 🏷 <code>Vue.js</code></p><h3 id="_905-按奇偶排序数组" tabindex="-1">[905] 按奇偶排序数组 <a class="header-anchor" href="#_905-按奇偶排序数组" aria-label="Permalink to &quot;[905] 按奇偶排序数组&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7207374216126316601)</span></span></code></pre></div></blockquote><p>📊 <strong>962 阅读 · 1 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-06 🏷 <code>算法</code></p><h3 id="_904-水果成篮" tabindex="-1">[904] 水果成篮 <a class="header-anchor" href="#_904-水果成篮" aria-label="Permalink to &quot;[904] 水果成篮&quot;">​</a></h3><blockquote><div class="language-**/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">**/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7207030843214053434)</span></span></code></pre></div></blockquote><p>📊 <strong>954 阅读 · 9 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-05 🏷 <code>算法</code></p><h3 id="_3-vue为什么需要虚拟dom" tabindex="-1">3.vue为什么需要虚拟DOM？ <a class="header-anchor" href="#_3-vue为什么需要虚拟dom" aria-label="Permalink to &quot;3.vue为什么需要虚拟DOM？&quot;">​</a></h3><blockquote><p>1.概念 虚拟DOM就是一个js对象来描述真实DOM，如果直接操作DOM的话，性能低但是js层的操作效率高，虚拟DOM是将操作转换为对象操作，最终通过diff算法对差异进行更新，减少对真实DOM的操作...</p><p><a href="https://juejin.cn/post/7206950454097526840" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>546 阅读 · 3 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-03-05 🏷 <code>Vue.js</code></p><h3 id="_2-谈谈spa的理解" tabindex="-1">2.谈谈spa的理解 <a class="header-anchor" href="#_2-谈谈spa的理解" aria-label="Permalink to &quot;2.谈谈spa的理解&quot;">​</a></h3><blockquote><p>1.概念 1.SPA（单页面应用），默认情况下vue、react都是一个html，并且提供一个挂载点，打包后的js在该页面引入进行渲染，切换路由渲染对应的页面都是前端来实现，客户端渲染SSR 2.MP...</p><p><a href="https://juejin.cn/post/7206264862657200187" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>52 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-03 🏷 <code>算法</code></p><h3 id="_1-谈谈你对vue的理解" tabindex="-1">1.谈谈你对vue的理解 <a class="header-anchor" href="#_1-谈谈你对vue的理解" aria-label="Permalink to &quot;1.谈谈你对vue的理解&quot;">​</a></h3><blockquote><p>1.声明式框架 vue是一种渐进式的框架，组件，vue-router，vuex，pinia，构建工具等功能可以逐步加到项目里面，不需要一下子用，声明式是更加关注结果，不需要关注过程，早在jq时代 （命...</p><p><a href="https://juejin.cn/post/7206264862656643131" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>43 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-03 🏷 <code>面试</code></p><h3 id="_876-链表的中间结点" tabindex="-1">[876] 链表的中间结点 <a class="header-anchor" href="#_876-链表的中间结点" aria-label="Permalink to &quot;[876] 链表的中间结点&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7206239061585510457)</span></span></code></pre></div></blockquote><p>📊 <strong>27 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-03 🏷 <code>算法</code></p><h3 id="_844-比较含退格的字符串" tabindex="-1">[844] 比较含退格的字符串 <a class="header-anchor" href="#_844-比较含退格的字符串" aria-label="Permalink to &quot;[844] 比较含退格的字符串&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7205875185739939896)</span></span></code></pre></div></blockquote><p>📊 <strong>35 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-02 🏷 <code>算法</code></p><h3 id="_836-矩形重叠" tabindex="-1">[836] 矩形重叠 <a class="header-anchor" href="#_836-矩形重叠" aria-label="Permalink to &quot;[836] 矩形重叠&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7205522148785094712)</span></span></code></pre></div></blockquote><p>📊 <strong>66 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-01 🏷 <code>算法</code></p><h3 id="el-dialog二次封装-close和取消按钮的-click调用两次" tabindex="-1">el-dialog二次封装@close和取消按钮的@click调用两次 <a class="header-anchor" href="#el-dialog二次封装-close和取消按钮的-click调用两次" aria-label="Permalink to &quot;el-dialog二次封装@close和取消按钮的@click调用两次&quot;">​</a></h3><blockquote><p>el-dialog二次封装@close和取消按钮的@click共用一个函数会导致函数调用两次，这里的需要判断dialogVisible是不是已经关闭，关闭了就不再调用，这样就只会调用一次函数...</p><p><a href="https://juejin.cn/post/7205390655857573943" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>743 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-03-01 🏷 <code>Vue.js</code></p><h3 id="_796-旋转字符串" tabindex="-1">[796] 旋转字符串 <a class="header-anchor" href="#_796-旋转字符串" aria-label="Permalink to &quot;[796] 旋转字符串&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7205138514869518396)</span></span></code></pre></div></blockquote><p>📊 <strong>24 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-28 🏷 <code>算法</code></p><h3 id="_733-图像渲染" tabindex="-1">[733] 图像渲染 <a class="header-anchor" href="#_733-图像渲染" aria-label="Permalink to &quot;[733] 图像渲染&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7204767643675557925)</span></span></code></pre></div></blockquote><p>📊 <strong>27 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-27 🏷 <code>算法</code></p><h3 id="uniapp小程序自定义底部tabbar" tabindex="-1">uniapp小程序自定义底部tabbar <a class="header-anchor" href="#uniapp小程序自定义底部tabbar" aria-label="Permalink to &quot;uniapp小程序自定义底部tabbar&quot;">​</a></h3><blockquote><p>1.在page.json将其设置为true 2.在app.vue添加，隐藏相对应的原生tabbar 3.在主页面导入对应的子组件 这里使用:style=&quot;{ display: tabbarIndex ...</p><p><a href="https://juejin.cn/post/7204349756621013052" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>639 阅读 · 1 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-02-26 🏷 <code>微信小程序</code></p><h3 id="_695-岛屿的最大面积" tabindex="-1">[695] 岛屿的最大面积 <a class="header-anchor" href="#_695-岛屿的最大面积" aria-label="Permalink to &quot;[695] 岛屿的最大面积&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7203648441720946748)</span></span></code></pre></div></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-24 🏷 <code>算法</code></p><h3 id="_680-验证回文串-ii" tabindex="-1">[680] 验证回文串 II <a class="header-anchor" href="#_680-验证回文串-ii" aria-label="Permalink to &quot;[680] 验证回文串 II&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7203341999956049976)</span></span></code></pre></div></blockquote><p>📊 <strong>17 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-23 🏷 <code>算法</code></p><h3 id="点击elselect不触发-点击倒三角icon才触发" tabindex="-1">点击elselect不触发，点击倒三角icon才触发 <a class="header-anchor" href="#点击elselect不触发-点击倒三角icon才触发" aria-label="Permalink to &quot;点击elselect不触发，点击倒三角icon才触发&quot;">​</a></h3><blockquote><p>今天开发的需求，点击红色不触发el-select，点击三角图标（蓝色区域）才触发el-select， 不得不说子绝父相的使用得好，下班下得早 ![image.png](<a href="https://p1-jue" target="_blank" rel="noreferrer">https://p1-jue</a>...</p><p><a href="https://juejin.cn/post/7203218942285594679" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>119 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-23 🏷 <code>Vue.js</code> <code>前端</code></p><h3 id="_509-斐波那契数" tabindex="-1">[509] 斐波那契数 <a class="header-anchor" href="#_509-斐波那契数" aria-label="Permalink to &quot;[509] 斐波那契数&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7202914988012240933)</span></span></code></pre></div></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-22 🏷 <code>算法</code></p><h3 id="_445-两数相加-ii" tabindex="-1">[445] 两数相加 II <a class="header-anchor" href="#_445-两数相加-ii" aria-label="Permalink to &quot;[445] 两数相加 II&quot;">​</a></h3><blockquote><p>思路： 利用进栈出栈的思想，反转链表，相加，新建链表指向余数 \`\`\` /* * @lc app=leetcode.cn id=445 lang=...</p><p><a href="https://juejin.cn/post/7202557470341791799" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>46 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-21 🏷 <code>算法</code></p><h3 id="_419-甲板上的战舰" tabindex="-1">[419] 甲板上的战舰 <a class="header-anchor" href="#_419-甲板上的战舰" aria-label="Permalink to &quot;[419] 甲板上的战舰&quot;">​</a></h3><blockquote><p>跟200题一样的解法 \`\`\` /* * @lc app=leetcode.cn id=419 lang=javascript * * [419] 甲板上的战舰 */ // @lc code=...</p><p><a href="https://juejin.cn/post/7202162496035962917" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>28 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-20 🏷 <code>算法</code></p><h3 id="_328-奇偶链表" tabindex="-1">[328] 奇偶链表 <a class="header-anchor" href="#_328-奇偶链表" aria-label="Permalink to &quot;[328] 奇偶链表&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7201404175245918245)</span></span></code></pre></div></blockquote><p>📊 <strong>38 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-18 🏷 <code>算法</code></p><h3 id="低代码平台拖拽实现逻辑" tabindex="-1">低代码平台拖拽实现逻辑 <a class="header-anchor" href="#低代码平台拖拽实现逻辑" aria-label="Permalink to &quot;低代码平台拖拽实现逻辑&quot;">​</a></h3><blockquote><p>页面分为左中右三栏，左边物料栏定义key，中间是定制的div，右边是设置属性 代码目录 最外层的div 点击切换json进行设置元素的背景色，这里使用的是import Draggable from &quot;...</p><p><a href="https://juejin.cn/post/7201291481915195451" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>237 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-18 🏷 <code>前端</code></p><h3 id="vue3-路由跳转空白-刷新页面不会空白" tabindex="-1">vue3 路由跳转空白，刷新页面不会空白 <a class="header-anchor" href="#vue3-路由跳转空白-刷新页面不会空白" aria-label="Permalink to &quot;vue3 路由跳转空白，刷新页面不会空白&quot;">​</a></h3><blockquote><p>vue3 路由跳转空白，刷新页面不会空白 原因是，没有给router-view动态添加key，key根据路径+随机数即可...</p><p><a href="https://juejin.cn/post/7200935271683407930" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1378 阅读 · 1 点赞 · 0 评论 · 2 收藏</strong></p><p>📅 2023-02-17 🏷 <code>Vue.js</code></p><h3 id="_242-有效的字母异位词" tabindex="-1">[242] 有效的字母异位词 <a class="header-anchor" href="#_242-有效的字母异位词" aria-label="Permalink to &quot;[242] 有效的字母异位词&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7200689363532349477)</span></span></code></pre></div></blockquote><p>📊 <strong>21 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-16 🏷 <code>算法</code></p><h3 id="draggable对表格列进行拖拽排序" tabindex="-1">draggable对表格列进行拖拽排序 <a class="header-anchor" href="#draggable对表格列进行拖拽排序" aria-label="Permalink to &quot;draggable对表格列进行拖拽排序&quot;">​</a></h3><blockquote><p>draggable对表格列进行拖拽排序 \`\`\` <code>&lt;!-- 排序 --&gt;</code> <code>&lt;Dialog title=&quot;Sort&quot; v-model:dialogVisible=&quot;dialogFormVisibl... </code><a href="https://juejin.cn/post/7200662891565088827" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>122 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-16 🏷 <code>前端</code> <code>Vue.js</code></p><h3 id="vue-router页面跳转传参以及数据回显-选择" tabindex="-1">vue-router页面跳转传参以及数据回显，选择 <a class="header-anchor" href="#vue-router页面跳转传参以及数据回显-选择" aria-label="Permalink to &quot;vue-router页面跳转传参以及数据回显，选择&quot;">​</a></h3><blockquote><p>开发时需要跳转页面传参，使用下拉框发现无法选择以及回显 仔细分析原因是 1.将数组存在sessionStroge里面（将数组使用JSON.pare拿出来） 2.地址栏传参，拿到的是字符串（字符串转为数...</p><p><a href="https://juejin.cn/post/7200567357022437436" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>138 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-02-16 🏷 <code>前端</code></p><h3 id="_238-除自身以外数组的乘积" tabindex="-1">[238] 除自身以外数组的乘积 <a class="header-anchor" href="#_238-除自身以外数组的乘积" aria-label="Permalink to &quot;[238] 除自身以外数组的乘积&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7200286282068803645)</span></span></code></pre></div></blockquote><p>📊 <strong>23 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-15 🏷 <code>算法</code></p><h3 id="_219-存在重复元素-ii" tabindex="-1">[219] 存在重复元素 II <a class="header-anchor" href="#_219-存在重复元素-ii" aria-label="Permalink to &quot;[219] 存在重复元素 II&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7199941931676893244)</span></span></code></pre></div></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-14 🏷 <code>算法</code></p><h3 id="nest-swagger接口文档" tabindex="-1">nest swagger接口文档 <a class="header-anchor" href="#nest-swagger接口文档" aria-label="Permalink to &quot;nest swagger接口文档&quot;">​</a></h3><blockquote><p>1.接口tags分类，接口说明 ![image.png](<a href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa22b1a5a35d446ca9d20" target="_blank" rel="noreferrer">https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa22b1a5a35d446ca9d20</a>...</p><p><a href="https://juejin.cn/post/7199643762451513402" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>67 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-13 🏷 <code>NestJS</code></p><h3 id="_206-反转链表" tabindex="-1">[206] 反转链表 <a class="header-anchor" href="#_206-反转链表" aria-label="Permalink to &quot;[206] 反转链表&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7199254597914361917)</span></span></code></pre></div></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-12 🏷 <code>算法</code></p><h3 id="_200-岛屿数量" tabindex="-1">[200] 岛屿数量 <a class="header-anchor" href="#_200-岛屿数量" aria-label="Permalink to &quot;[200] 岛屿数量&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7198884367870312506)</span></span></code></pre></div></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-11 🏷 <code>算法</code></p><h3 id="nestjs连接mysql" tabindex="-1">nestjs连接mysql <a class="header-anchor" href="#nestjs连接mysql" aria-label="Permalink to &quot;nestjs连接mysql&quot;">​</a></h3><blockquote><p>1.安装typeorm 2.vscode安装可视化工具 Database Client 3.连接数据库 4.nest连接数据库表 5.创建test类 nest g res test 6.导出实体类 7...</p><p><a href="https://juejin.cn/post/7198534533536333884" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>77 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-02-10 🏷 <code>NestJS</code></p><h3 id="_198-打家劫舍" tabindex="-1">[198] 打家劫舍 <a class="header-anchor" href="#_198-打家劫舍" aria-label="Permalink to &quot;[198] 打家劫舍&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7198476152624807997)</span></span></code></pre></div></blockquote><p>📊 <strong>32 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-10 🏷 <code>算法</code></p><h3 id="_123-买卖股票的最佳时机-iii" tabindex="-1">[123] 买卖股票的最佳时机 III <a class="header-anchor" href="#_123-买卖股票的最佳时机-iii" aria-label="Permalink to &quot;[123] 买卖股票的最佳时机 III&quot;">​</a></h3><blockquote><p>![image.png](<a href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f2762a8203f04045828740c248cafd9b~tplv" target="_blank" rel="noreferrer">https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f2762a8203f04045828740c248cafd9b~tplv</a>...</p><p><a href="https://juejin.cn/post/7198088088521277477" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-09 🏷 <code>算法</code></p><h3 id="_187-重复的dna序列" tabindex="-1">[187] 重复的DNA序列 <a class="header-anchor" href="#_187-重复的dna序列" aria-label="Permalink to &quot;[187] 重复的DNA序列&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7197400930785574973)</span></span></code></pre></div></blockquote><p>📊 <strong>44 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-07 🏷 <code>算法</code></p><h3 id="_160-相交链表" tabindex="-1">[160] 相交链表 <a class="header-anchor" href="#_160-相交链表" aria-label="Permalink to &quot;[160] 相交链表&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7196975187991167013)</span></span></code></pre></div></blockquote><p>📊 <strong>14 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-06 🏷 <code>算法</code></p><h3 id="el-table实现单元格编辑" tabindex="-1">el-table实现单元格编辑 <a class="header-anchor" href="#el-table实现单元格编辑" aria-label="Permalink to &quot;el-table实现单元格编辑&quot;">​</a></h3><blockquote><div class="language-const vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">const</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7196943285382086693)</span></span></code></pre></div></blockquote><p>📊 <strong>227 阅读 · 0 点赞 · 0 评论 · 1 收藏</strong></p><p>📅 2023-02-06 🏷 <code>Vue.js</code></p><h3 id="_153-寻找旋转排序数组中的最小值" tabindex="-1">[153] 寻找旋转排序数组中的最小值 <a class="header-anchor" href="#_153-寻找旋转排序数组中的最小值" aria-label="Permalink to &quot;[153] 寻找旋转排序数组中的最小值&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7196647843138076732)</span></span></code></pre></div></blockquote><p>📊 <strong>23 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-05 🏷 <code>算法</code></p><h3 id="_152-乘积最大子数组" tabindex="-1">[152] 乘积最大子数组 <a class="header-anchor" href="#_152-乘积最大子数组" aria-label="Permalink to &quot;[152] 乘积最大子数组&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7196227448287248421)</span></span></code></pre></div></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-04 🏷 <code>算法</code></p><h3 id="_2-nest命令和code码规范" tabindex="-1">2.nest命令和Code码规范 <a class="header-anchor" href="#_2-nest命令和code码规范" aria-label="Permalink to &quot;2.nest命令和Code码规范&quot;">​</a></h3><blockquote><p>1.nest --help 2.创建一个demo，这样需要三步，nestjs有快速生成crud的命令，nest g resource user 3.main.ts开启版本 全部添加上v1 单个添加 4...</p><p><a href="https://juejin.cn/post/7195910055497678904" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>114 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-03 🏷 <code>NestJS</code></p><h3 id="_142-环形链表-ii" tabindex="-1">[142] 环形链表 II <a class="header-anchor" href="#_142-环形链表-ii" aria-label="Permalink to &quot;[142] 环形链表 II&quot;">​</a></h3><blockquote><p>思路： 1.先判断是不是环（环形链表I的解法基础上） 2.将快指针放到链表头，快慢指针都走一步，返回相遇的那一点...</p><p><a href="https://juejin.cn/post/7195858568234483770" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>39 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-03 🏷 <code>算法</code></p><h3 id="nest装饰器" tabindex="-1">nest装饰器 <a class="header-anchor" href="#nest装饰器" aria-label="Permalink to &quot;nest装饰器&quot;">​</a></h3><blockquote><p>一、类装饰器 二、属性装饰器 三、方法装饰器 四、参数装饰器 //一、类装饰器 const doc: ClassDecorator = (target: any) =&gt; { console.log...</p><p><a href="https://juejin.cn/post/7195560140555255845" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>36 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-02 🏷 <code>NestJS</code></p><h3 id="_141-环形链表" tabindex="-1">[141] 环形链表 <a class="header-anchor" href="#_141-环形链表" aria-label="Permalink to &quot;[141] 环形链表&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7195547185717805114)</span></span></code></pre></div></blockquote><p>📊 <strong>30 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-02-02 🏷 <code>算法</code></p><h3 id="vue3-ts-excel文件导出导入到el-table" tabindex="-1">vue3+ts excel文件导出导入到el-table <a class="header-anchor" href="#vue3-ts-excel文件导出导入到el-table" aria-label="Permalink to &quot;vue3+ts excel文件导出导入到el-table&quot;">​</a></h3><blockquote><p>vue3+ts excel文件导出导入到el-table 安装 npm install --save xlsx file-saver npm install @types/file-saver --s...</p><p><a href="https://juejin.cn/post/7195465664763527205" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>1022 阅读 · 1 点赞 · 0 评论 · 6 收藏</strong></p><p>📅 2023-02-02 🏷 <code>Vue.js</code></p><h3 id="_134-加油站" tabindex="-1">[134] 加油站 <a class="header-anchor" href="#_134-加油站" aria-label="Permalink to &quot;[134] 加油站&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7194657579430051877)</span></span></code></pre></div></blockquote><p>📊 <strong>17 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-31 🏷 <code>算法</code></p><h3 id="_125-验证回文串" tabindex="-1">[125] 验证回文串 <a class="header-anchor" href="#_125-验证回文串" aria-label="Permalink to &quot;[125] 验证回文串&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7194290219334500412)</span></span></code></pre></div></blockquote><p>📊 <strong>39 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-30 🏷 <code>算法</code></p><h3 id="_122-买卖股票的最佳时机-ii" tabindex="-1">[122] 买卖股票的最佳时机 II <a class="header-anchor" href="#_122-买卖股票的最佳时机-ii" aria-label="Permalink to &quot;[122] 买卖股票的最佳时机 II&quot;">​</a></h3><blockquote><p>思路： 1.定义最大利润和i为0，最大价格和最小价格为数组的第一个元素 2.跌：循环第i位的价格大于下一位的价格就继续i++，小于则是这一次下跌的最低价格，min = prices[i] 3.涨：循环...</p><p><a href="https://juejin.cn/post/7193165571469344827" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>22 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-27 🏷 <code>算法</code></p><h3 id="_121-买卖股票的最佳时机" tabindex="-1">[121] 买卖股票的最佳时机 <a class="header-anchor" href="#_121-买卖股票的最佳时机" aria-label="Permalink to &quot;[121] 买卖股票的最佳时机&quot;">​</a></h3><blockquote><p>思路 1.先定义两个变量记录最小价格和最大利润，初始化为数组第一个和0 2.for循环判断是不是小于最小价格以及利润是不是大于最大利润，是就替换...</p><p><a href="https://juejin.cn/post/7192793081245073463" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>16 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-26 🏷 <code>算法</code></p><h3 id="_90-子集-ii" tabindex="-1">[90] 子集 II <a class="header-anchor" href="#_90-子集-ii" aria-label="Permalink to &quot;[90] 子集 II&quot;">​</a></h3><blockquote><p>思路 跟子集解法一样，需要去重（减枝，优化算法），增加的步骤是先排序，判断是不是跟上一个元素一样，一样就跳过...</p><p><a href="https://juejin.cn/post/7192419342556856377" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>15 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-25 🏷 <code>算法</code></p><h3 id="_78-子集" tabindex="-1">[78] 子集 <a class="header-anchor" href="#_78-子集" aria-label="Permalink to &quot;[78] 子集&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7191782881226653751)</span></span></code></pre></div></blockquote><p>📊 <strong>24 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-23 🏷 <code>算法</code></p><h3 id="_73-矩阵置零" tabindex="-1">[73] 矩阵置零 <a class="header-anchor" href="#_73-矩阵置零" aria-label="Permalink to &quot;[73] 矩阵置零&quot;">​</a></h3><blockquote><p>思路 in-place instead.是不能拷贝一个新的数组，拷贝新数组是最简单的实现方式 1.for循环第一行和第一列有没有0，有就标记对应的变量为true 2.双层for循环遍历到0就把对应的第...</p><p><a href="https://juejin.cn/post/7191684517990498364" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>51 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-23 🏷 <code>算法</code></p><h3 id="_70-爬楼梯" tabindex="-1">[70] 爬楼梯 <a class="header-anchor" href="#_70-爬楼梯" aria-label="Permalink to &quot;[70] 爬楼梯&quot;">​</a></h3><blockquote><p>思路 1.定义一个memo数组，然后初始化memo[1]=1,memo[2]=2 2.for循环从3开始，memo[i]=memo[i-2]+memo[i-1] 3.return memo[n]...</p><p><a href="https://juejin.cn/post/7191401224892055589" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>24 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-22 🏷 <code>算法</code></p><h3 id="_66-加一" tabindex="-1">[66] 加一 <a class="header-anchor" href="#_66-加一" aria-label="Permalink to &quot;[66] 加一&quot;">​</a></h3><blockquote><p>思路 1.先从数组最后一位开始循环，遇到九就变成0继续循环 2.如果不是九就++返回 3.如果数组是999这样就[1,…数组的所有0]...</p><p><a href="https://juejin.cn/post/7191063533013401656" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>33 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-21 🏷 <code>算法</code></p><h3 id="_62-不同路径" tabindex="-1">[62] 不同路径 <a class="header-anchor" href="#_62-不同路径" aria-label="Permalink to &quot;[62] 不同路径&quot;">​</a></h3><blockquote><p>思路 1.for循环创建一个二维数组 2.再初始化第一列和第一行都为1 3.再把每一个空格算出来（上边加左边） 4.再把finish位置的值return...</p><p><a href="https://juejin.cn/post/7190939010846425149" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>19 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-21 🏷 <code>算法</code></p><h3 id="_56-合并区间" tabindex="-1">[56] 合并区间 <a class="header-anchor" href="#_56-合并区间" aria-label="Permalink to &quot;[56] 合并区间&quot;">​</a></h3><blockquote><p>思路 1.先按照子数组的第一个元素排序 2.判断第二个子数组的第一个元素是不是小于第一个子数组的第二个元素 3.最后再把定义的变量数组push进去...</p><p><a href="https://juejin.cn/post/7190657625564905532" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>18 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-20 🏷 <code>算法</code></p><h3 id="_55-跳跃游戏" tabindex="-1">[55] 跳跃游戏 <a class="header-anchor" href="#_55-跳跃游戏" aria-label="Permalink to &quot;[55] 跳跃游戏&quot;">​</a></h3><blockquote><p>思路 1.先初始一个变量maxJump为最后一位的index 2.往前遍历i的index和值的和是不是大于等于maxJump，满足就把maxJump更新为i 3.最后判断maxJump有没有到达第一位...</p><p><a href="https://juejin.cn/post/7190303446879174712" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>20 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-19 🏷 <code>算法</code></p><h3 id="_54-螺旋矩阵" tabindex="-1">[54] 螺旋矩阵 <a class="header-anchor" href="#_54-螺旋矩阵" aria-label="Permalink to &quot;[54] 螺旋矩阵&quot;">​</a></h3><blockquote><p>思路： 1.定义四个边界值，top和left都是0，right为数组的第一元素的长度-1，bottom为数组的长度-1 2.按照右下左上进行push...</p><p><a href="https://juejin.cn/post/7189963292919414845" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>48 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-18 🏷 <code>算法</code></p><h3 id="_53-最大子数组和" tabindex="-1">[53] 最大子数组和 <a class="header-anchor" href="#_53-最大子数组和" aria-label="Permalink to &quot;[53] 最大子数组和&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7189475739735949372)</span></span></code></pre></div></blockquote><p>📊 <strong>10 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-17 🏷 <code>算法</code></p><h3 id="字母异位词分组" tabindex="-1">字母异位词分组 <a class="header-anchor" href="#字母异位词分组" aria-label="Permalink to &quot;字母异位词分组&quot;">​</a></h3><blockquote><p>思路 1.把数组里面的字符串按照大小排列，有相同就push到map的value里面 2.[...map.values()]去除map的每一项到数组里面返回...</p><p><a href="https://juejin.cn/post/7188525294549106725" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>31 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-14 🏷 <code>算法</code></p><h3 id="_24-两两交换链表中的节点" tabindex="-1">[24] 两两交换链表中的节点 <a class="header-anchor" href="#_24-两两交换链表中的节点" aria-label="Permalink to &quot;[24] 两两交换链表中的节点&quot;">​</a></h3><blockquote><p>思路： 1.有一个链表0-&gt;1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6,创建三个指针，curr，n1,n2分别指向0，1，2 2.交换位置 3.再curr=n1也就是新的一轮curr，n1,n2分别指向1，3，...</p><p><a href="https://juejin.cn/post/7188154244338286651" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>23 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-13 🏷 <code>算法</code></p><h3 id="_20-有效的括号" tabindex="-1">[20] 有效的括号 <a class="header-anchor" href="#_20-有效的括号" aria-label="Permalink to &quot;[20] 有效的括号&quot;">​</a></h3><blockquote><p>思路 1.把三种括号存在map里面 2.判断有没有左括号，有就push进starck 3.如果是右括号就拿出数组里的最后一位比较，是不是一样 判断是不是空数组，不是就说明没有成对的括号，return ...</p><p><a href="https://juejin.cn/post/7187026657000030268" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-10 🏷 <code>算法</code></p><h3 id="_19-删除链表的倒数第-n-个结点" tabindex="-1">[19] 删除链表的倒数第 N 个结点 <a class="header-anchor" href="#_19-删除链表的倒数第-n-个结点" aria-label="Permalink to &quot;[19] 删除链表的倒数第 N 个结点&quot;">​</a></h3><blockquote><p>思路： 1.创建一个新listNode 2.创建两个指针指向dummy 3.for循环让n2先走 4.n2不走到最后一位，就让n1和n2继续走，两者相差一个位置...</p><p><a href="https://juejin.cn/post/7186665369833046077" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>35 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-09 🏷 <code>算法</code></p><h3 id="三数之和" tabindex="-1">三数之和 <a class="header-anchor" href="#三数之和" aria-label="Permalink to &quot;三数之和&quot;">​</a></h3><blockquote><p>思路： 1.先排序 2.首先判断nums数组长度，如果小于3 或者 升序排序后第一个元素大于0 则直接返回空数组 3.left必须小于right 4.三数之和等于0就push，小于0就start++，...</p><p><a href="https://juejin.cn/post/7186296920422219837" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>50 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-08 🏷 <code>算法</code></p><h3 id="最长回文子串" tabindex="-1">最长回文子串 <a class="header-anchor" href="#最长回文子串" aria-label="Permalink to &quot;最长回文子串&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7185548085068562491)</span></span></code></pre></div></blockquote><p>📊 <strong>34 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-06 🏷 <code>算法</code></p><h3 id="无重复字符的最长子串" tabindex="-1">无重复字符的最长子串 <a class="header-anchor" href="#无重复字符的最长子串" aria-label="Permalink to &quot;无重复字符的最长子串&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>[前往掘金](https://juejin.cn/post/7185180597835268133)</span></span></code></pre></div></blockquote><p>📊 <strong>33 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-05 🏷 <code>算法</code></p><h3 id="两数相加" tabindex="-1">两数相加 <a class="header-anchor" href="#两数相加" aria-label="Permalink to &quot;两数相加&quot;">​</a></h3><blockquote><div class="language-/* vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">/*</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line highlighted"><span>[前往掘金](https://juejin.cn/post/7184713886828855356)</span></span></code></pre></div></blockquote><p>📊 <strong>44 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-04 🏷 <code>前端</code></p><h3 id="ts的partial和pick" tabindex="-1">ts的Partial和Pick <a class="header-anchor" href="#ts的partial和pick" aria-label="Permalink to &quot;ts的Partial和Pick&quot;">​</a></h3><blockquote><p>1.Partial（将其转为可选的属性） [P in keyof T]? 遍历对象的所有属性将其变为可选的，T[P]获取对象的属性值的约束（例如string） 2.Pick（限制并筛选属性，例如只能是...</p><p><a href="https://juejin.cn/post/7183981252540629048" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>53 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-02 🏷 <code>TypeScript</code></p><h3 id="ts实现简易的proxy对象代理" tabindex="-1">ts实现简易的proxy对象代理 <a class="header-anchor" href="#ts实现简易的proxy对象代理" aria-label="Permalink to &quot;ts实现简易的proxy对象代理&quot;">​</a></h3><blockquote><p>这里使用Reflect来操作对象的属性，get和set 具体代码 原理就是定义一个方法去返回一个proxy对象，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等），要使用 Proxy...</p><p><a href="https://juejin.cn/post/7183977440866697273" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>546 阅读 · 0 点赞 · 0 评论 · 0 收藏</strong></p><p>📅 2023-01-02 🏷 <code>Vue.js</code></p><h3 id="ts实现一个发布订阅模式" tabindex="-1">ts实现一个发布订阅模式 <a class="header-anchor" href="#ts实现一个发布订阅模式" aria-label="Permalink to &quot;ts实现一个发布订阅模式&quot;">​</a></h3><blockquote><p>发布订阅模式有4个方法，存储结构是一个对象键是表示类一类，值是一个对象，每一项都是一个方法 1.on方法将某给对象属性，数组添加一个方法（将消息收集到一个数组里面） 2.emit方法将对象属性的数组中...</p><p><a href="https://juejin.cn/post/7183694665554591805" target="_blank" rel="noreferrer">前往掘金</a></p></blockquote><p>📊 <strong>242 阅读 · 0 点赞 · 0 评论 · 2 收藏</strong></p><p>📅 2023-01-01 🏷 <code>TypeScript</code></p>`,696)]))}const b=a(n,[["render",p]]);export{u as __pageData,b as default};
